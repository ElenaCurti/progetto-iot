[
    {
        "id": "8c18e233c7d90889",
        "type": "tab",
        "label": "Comunicazione MQTT/Bluetooth ",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e033c8a02dcd63b3",
        "type": "tab",
        "label": "Comunicazione2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8e8ebe259a351cf1",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f42f0c6ac0c908c0",
        "type": "tab",
        "label": "NFC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3215fe15d9aa44e7",
        "type": "tab",
        "label": "Campanello ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8b4f62e2713401d0",
        "type": "tab",
        "label": "Amministratore",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3c590ebc25e0b5cc",
        "type": "mqtt-broker",
        "name": "BrokerUsato",
        "broker": "192.168.43.252",
        "port": "1883",
        "clientid": "cam-nodereda",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1882cf541cd0b971",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6778e3a8648143cc",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "86f322ebf8049f50",
        "type": "ui_group",
        "name": "Campanello",
        "tab": "6778e3a8648143cc",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "68b41a4217490954",
        "type": "ui_group",
        "name": "Lettore NFC",
        "tab": "6778e3a8648143cc",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e4e518ab79ad6ee8",
        "type": "ui_group",
        "name": "Stato devices MQTT",
        "tab": "6778e3a8648143cc",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9f184ff151f6c1ba",
        "type": "ui_spacer",
        "z": "8c18e233c7d90889",
        "name": "spacer",
        "group": "86f322ebf8049f50",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "6e6f8688063b3313",
        "type": "ui_group",
        "name": "Stato Device BT",
        "tab": "6778e3a8648143cc",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cd718b65b0c0bc62",
        "type": "ui_group",
        "name": "Connessioni Board",
        "tab": "6778e3a8648143cc",
        "order": 5,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "478a5f37ec18385d",
        "type": "mqtt in",
        "z": "8c18e233c7d90889",
        "name": "",
        "topic": "my_devices/door/esp_nfc/tag_swiped",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 360,
        "wires": [
            [
                "cb0e70cb334fcc37",
                "6132409519edca74",
                "db1ed666cfb4c6b4"
            ]
        ]
    },
    {
        "id": "cb0e70cb334fcc37",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "Tag srisciato",
        "mode": "link",
        "links": [
            "8eb16bd75eadf7bd"
        ],
        "x": 395,
        "y": 360,
        "wires": []
    },
    {
        "id": "b0855f9be5bd07e4",
        "type": "link in",
        "z": "8c18e233c7d90889",
        "d": true,
        "name": "Messaggio arrivato",
        "links": [
            "e13bef5a50f05d0d",
            "34fdb057c7b9b142"
        ],
        "x": 505,
        "y": 160,
        "wires": [
            [
                "ce1e8666c66fe402"
            ]
        ]
    },
    {
        "id": "ce1e8666c66fe402",
        "type": "debug",
        "z": "8c18e233c7d90889",
        "d": true,
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 160,
        "wires": []
    },
    {
        "id": "810e5797592264d8",
        "type": "inject",
        "z": "8c18e233c7d90889",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "hello",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 100,
        "wires": [
            [
                "2a53e632a074eb2b"
            ]
        ]
    },
    {
        "id": "2a53e632a074eb2b",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "d": true,
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "75d692335ae0836d"
        ],
        "x": 755,
        "y": 100,
        "wires": []
    },
    {
        "id": "6ca3d778ee6a1631",
        "type": "comment",
        "z": "8c18e233c7d90889",
        "name": "Esempio di comunicazione",
        "info": "",
        "x": 190,
        "y": 100,
        "wires": []
    },
    {
        "id": "6b07c5a4cb379572",
        "type": "mqtt in",
        "z": "8c18e233c7d90889",
        "name": "",
        "topic": "my_devices/door/esp_nfc/intruder",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "7c7f5fdd0557d647",
                "6132409519edca74",
                "db1ed666cfb4c6b4"
            ]
        ]
    },
    {
        "id": "7c7f5fdd0557d647",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "Intruso",
        "mode": "link",
        "links": [
            "a60c677347135904"
        ],
        "x": 775,
        "y": 360,
        "wires": []
    },
    {
        "id": "007fed61cdcaf3f7",
        "type": "mqtt out",
        "z": "8c18e233c7d90889",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 290,
        "y": 540,
        "wires": []
    },
    {
        "id": "e87b3b74df0bf879",
        "type": "link in",
        "z": "8c18e233c7d90889",
        "name": "Manda messaggio ",
        "links": [
            "85247eaccfcb5651",
            "b458d83fe470509a",
            "ebd45a88251b59c4",
            "d5fbf340676057d0",
            "90f26a43dd43037d",
            "cd3c846e4e60ed19",
            "783b1918abc47099",
            "3d919d0bb7aff126",
            "9f811edab4a388d2",
            "62de6c9968fc216d",
            "e0d9762acc9664a5",
            "24107174129b8318"
        ],
        "x": 135,
        "y": 540,
        "wires": [
            [
                "6132409519edca74",
                "db1ed666cfb4c6b4",
                "007fed61cdcaf3f7",
                "9525e415c9d89a85"
            ]
        ]
    },
    {
        "id": "166d659bf365b333",
        "type": "mqtt in",
        "z": "8c18e233c7d90889",
        "name": "",
        "topic": "my_devices/door/esp_nfc/button",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 970,
        "y": 360,
        "wires": [
            [
                "9c638ad8aa6b7d20",
                "6132409519edca74",
                "db1ed666cfb4c6b4"
            ]
        ]
    },
    {
        "id": "9c638ad8aa6b7d20",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "Campanello suonato",
        "mode": "link",
        "links": [
            "e9d789509278d3f9"
        ],
        "x": 1165,
        "y": 360,
        "wires": []
    },
    {
        "id": "c1abe2b1325cefff",
        "type": "mqtt in",
        "z": "8c18e233c7d90889",
        "name": "",
        "topic": "my_devices/door/esp_cam/image",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 440,
        "wires": [
            [
                "fec084381cfe638b",
                "6132409519edca74",
                "db1ed666cfb4c6b4"
            ]
        ]
    },
    {
        "id": "fec084381cfe638b",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "Immagine arrivata",
        "mode": "link",
        "links": [
            "518e81a0d326064b"
        ],
        "x": 385,
        "y": 440,
        "wires": []
    },
    {
        "id": "84b322614e860a30",
        "type": "mqtt in",
        "z": "8c18e233c7d90889",
        "name": "",
        "topic": "my_devices/door/esp_nfc/errors",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 550,
        "y": 440,
        "wires": [
            [
                "1cb179e3ea8dfcbd",
                "db1ed666cfb4c6b4",
                "6132409519edca74"
            ]
        ]
    },
    {
        "id": "1cb179e3ea8dfcbd",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "Errori",
        "mode": "link",
        "links": [
            "72429e099cc4b6ca"
        ],
        "x": 805,
        "y": 440,
        "wires": []
    },
    {
        "id": "e16d5542ca66785b",
        "type": "status",
        "z": "8c18e233c7d90889",
        "name": "Status connessione broker",
        "scope": [
            "478a5f37ec18385d"
        ],
        "x": 210,
        "y": 1380,
        "wires": [
            [
                "be64a22c4de607cd"
            ]
        ]
    },
    {
        "id": "3073ef0c35dba165",
        "type": "ui_text",
        "z": "8c18e233c7d90889",
        "group": "e4e518ab79ad6ee8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "MQTT broker:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1540,
        "y": 1380,
        "wires": []
    },
    {
        "id": "be64a22c4de607cd",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Check connessione broker + eventualmente inizia/spegni BT",
        "func": "// Status viene chiamato ogni 17 secondi\nvar stato = msg.status.text;\nvar parts = stato.split(\".\");\nvar lastPart = parts[parts.length - 1];\n\nvar old_com = flow.get(\"comunicazione_nodered\");\n\nif (lastPart == \"connected\" ){\n    msg.payload = \"Connesso\";\n    if (old_com == undefined || old_com != \"mqtt\") {\n        flow.set(\"comunicazione_nodered\", \"mqtt\");\n    }\n\n}else {\n    msg.payload = \"Disconnesso\";\n\n    if (old_com == undefined || old_com != \"bt\"){\n        flow.set(\"comunicazione_nodered\", \"bt\");\n        flow.set(\"comunicazione_cam\", \"bt\");\n        flow.set(\"comunicazione_nfc\", \"bt\");\n\n        msg.start_bt_cam = true;\n        msg.start_bt_nfc = true;\n    }\n\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1380,
        "wires": [
            [
                "3073ef0c35dba165",
                "e5e3215db7256559",
                "0f85131e790eb21f",
                "67992084d3717707"
            ]
        ]
    },
    {
        "id": "2918dbeb943cb810",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "0,1 to connesso/disconneso",
        "func": "if (msg.payload.code == 0)\n    msg.payload =  \"BT acceso\"; // TODO meglio \"attiva\"\nelse\n    msg.payload = \"BT spento\";\n\nreturn msg;\n\n\nreturn msg;\n\n// Con colori\nif (msg.payload == \"1\") {\n    msg.topic = \"green\";\n} else{\n    // msg.payload = \"Disconnessa (MQTT)\";\n    msg.topic = \"red\";\n}\nmsg.enabled = false; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 2020,
        "wires": [
            [
                "0ae44e4604134e9f"
            ]
        ]
    },
    {
        "id": "67b947c504e16c6b",
        "type": "ui_text",
        "z": "8c18e233c7d90889",
        "group": "6e6f8688063b3313",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "{{msg.topic}}",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1650,
        "y": 1980,
        "wires": []
    },
    {
        "id": "3f82f213dc60536c",
        "type": "inject",
        "z": "8c18e233c7d90889",
        "name": "Check bluetooth NFC",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 260,
        "y": 2000,
        "wires": [
            [
                "0681132268bf680c"
            ]
        ]
    },
    {
        "id": "df1f7822b154432b",
        "type": "exec",
        "z": "8c18e233c7d90889",
        "command": "python \"../bluetooth_pc/bluetooth_discover_devices.py\"",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "Python - Bluetooth check device",
        "x": 870,
        "y": 2040,
        "wires": [
            [],
            [],
            [
                "2918dbeb943cb810",
                "249e02ccf3a83785"
            ]
        ]
    },
    {
        "id": "0768d5fb53b1b1a7",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Set value iniziale",
        "func": "msg.payload = \"Aggiorno...\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2100,
        "wires": [
            [
                "0ae44e4604134e9f"
            ]
        ]
    },
    {
        "id": "0ae44e4604134e9f",
        "type": "switch",
        "z": "8c18e233c7d90889",
        "name": "",
        "property": "label",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "NFC",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1490,
        "y": 2000,
        "wires": [
            [
                "67b947c504e16c6b"
            ],
            [
                "6e394b1b7279c165"
            ]
        ]
    },
    {
        "id": "6e394b1b7279c165",
        "type": "ui_text",
        "z": "8c18e233c7d90889",
        "group": "6e6f8688063b3313",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "{{msg.label}}",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "{{msg.topic}}",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1710,
        "y": 2060,
        "wires": []
    },
    {
        "id": "b248636a2745633f",
        "type": "inject",
        "z": "8c18e233c7d90889",
        "name": "Check bluetooth fotocamera",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 280,
        "y": 2080,
        "wires": [
            [
                "137bebe209c6c723"
            ]
        ]
    },
    {
        "id": "85e3f345a9113d1d",
        "type": "comment",
        "z": "8c18e233c7d90889",
        "name": "CHECK STATO BLUETOOTH - OGNI 30 SEC",
        "info": "",
        "x": 210,
        "y": 1900,
        "wires": []
    },
    {
        "id": "99cce86e4e7a2206",
        "type": "comment",
        "z": "8c18e233c7d90889",
        "name": "CHECK STATO MQTT + COMUNICAZIONE BT",
        "info": "",
        "x": 240,
        "y": 780,
        "wires": []
    },
    {
        "id": "1f28cde5f7c174b1",
        "type": "comment",
        "z": "8c18e233c7d90889",
        "name": "COMUNICAZIONE MQTT/BT",
        "info": "",
        "x": 180,
        "y": 280,
        "wires": []
    },
    {
        "id": "696a274cafa2f659",
        "type": "mqtt in",
        "z": "8c18e233c7d90889",
        "name": "",
        "topic": "my_devices/door/esp_nfc/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 900,
        "wires": [
            [
                "adc45e279b535a5a",
                "92702d11edc4046d",
                "50becbe4b40c4b5f"
            ]
        ]
    },
    {
        "id": "012f6d3eb43d529c",
        "type": "mqtt in",
        "z": "8c18e233c7d90889",
        "name": "",
        "topic": "my_devices/door/esp_cam/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 490,
        "y": 1520,
        "wires": [
            [
                "3480d3a48e0fb660",
                "b55c88d1966d12e3",
                "a428527e091f674f"
            ]
        ]
    },
    {
        "id": "6dc77b5647bfd793",
        "type": "ui_text",
        "z": "8c18e233c7d90889",
        "group": "e4e518ab79ad6ee8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Stato board CAM:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1810,
        "y": 1440,
        "wires": []
    },
    {
        "id": "adc45e279b535a5a",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "0,1 to connesso/disconneso",
        "func": "if (msg.payload == \"1\")\n    msg.payload = \"Connessa (MQTT)\";\nelse if(msg.payload == \"0\")\n    msg.payload = \"Disconnessa (MQTT)\";\nelse \n    msg.payload = \"\";\n\nreturn msg;\n\n\nreturn msg;\n\n// Con colori\nif (msg.payload == \"1\") {\n    msg.topic = \"green\";\n} else{\n    // msg.payload = \"Disconnessa (MQTT)\";\n    msg.topic = \"red\";\n}\nmsg.enabled = false; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 900,
        "wires": [
            [
                "d72e9ad09337fd21",
                "03eff9b7d64a09af"
            ]
        ]
    },
    {
        "id": "3480d3a48e0fb660",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "0,1 to connesso/disconneso",
        "func": "if (msg.payload == \"1\")\n    msg.payload = \"Connessa (MQTT)\";\nelse if (msg.payload == \"0\")\n    msg.payload = \"Disconnessa (MQTT)\";\nelse\n    msg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 1460,
        "wires": [
            [
                "6dc77b5647bfd793"
            ]
        ]
    },
    {
        "id": "d72e9ad09337fd21",
        "type": "ui_button",
        "z": "8c18e233c7d90889",
        "d": true,
        "name": "",
        "group": "e4e518ab79ad6ee8",
        "order": 2,
        "width": "1",
        "height": "1",
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "{{msg.topic}}",
        "bgcolor": "{{msg.topic}}",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1850,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "03eff9b7d64a09af",
        "type": "ui_text",
        "z": "8c18e233c7d90889",
        "group": "e4e518ab79ad6ee8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Stato board NFC:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "{{msg.topic}}",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1870,
        "y": 900,
        "wires": []
    },
    {
        "id": "e5e3215db7256559",
        "type": "switch",
        "z": "8c18e233c7d90889",
        "name": "Se broker disconnesso -> \"disconnesso (MQTT)\" altri devices",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Disconnesso",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1080,
        "y": 1340,
        "wires": [
            [
                "3480d3a48e0fb660",
                "adc45e279b535a5a"
            ]
        ]
    },
    {
        "id": "0681132268bf680c",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Check bluetooth Nfc",
        "func": "if (flow.get(\"comunicazione_nfc\") == \"bt\")\n    return null;\nmsg.payload=\"--nfc\";\nmsg.label = \"Stato board NFC:\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 2000,
        "wires": [
            [
                "0768d5fb53b1b1a7",
                "df1f7822b154432b"
            ]
        ]
    },
    {
        "id": "137bebe209c6c723",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Check bluetooth Fotocamera",
        "func": "if (flow.get(\"comunicazione_cam\") == \"bt\")\n    return null;\n\nmsg.payload=\"--cam\";\nmsg.label = \"Stato board CAM:\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 2080,
        "wires": [
            [
                "0768d5fb53b1b1a7",
                "df1f7822b154432b"
            ]
        ]
    },
    {
        "id": "7e5e41690cbbcd02",
        "type": "daemon",
        "z": "8c18e233c7d90889",
        "name": "Bluetooth CAM",
        "command": "python.exe",
        "args": "..\\bluetooth_pc\\bt_connect_multithread.py",
        "autorun": false,
        "cr": true,
        "redo": false,
        "op": "string",
        "closer": "SIGKILL",
        "x": 1600,
        "y": 1660,
        "wires": [
            [
                "d4ccc5ab6da6a7e0",
                "2a42f199af7c2850"
            ],
            [
                "d4ccc5ab6da6a7e0"
            ],
            [
                "b90c410984616e99"
            ]
        ]
    },
    {
        "id": "3b90ca299d089bd3",
        "type": "daemon",
        "z": "8c18e233c7d90889",
        "name": "Bluetooth NFC",
        "command": "python.exe",
        "args": "..\\bluetooth_pc\\bt_connect_multithread.py",
        "autorun": false,
        "cr": true,
        "redo": false,
        "op": "string",
        "closer": "SIGKILL",
        "x": 1120,
        "y": 1000,
        "wires": [
            [
                "5a452062808aa8bf",
                "f666e3e7acad013d"
            ],
            [
                "5a452062808aa8bf"
            ],
            [
                "03b2a5b5ab236710"
            ]
        ]
    },
    {
        "id": "5a452062808aa8bf",
        "type": "file",
        "z": "8c18e233c7d90889",
        "name": "out_err_nfc.txt",
        "filename": "out_err_nfc.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1340,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "d4ccc5ab6da6a7e0",
        "type": "file",
        "z": "8c18e233c7d90889",
        "name": "out_err_cam.txt",
        "filename": "out_err_cam.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1880,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "0f85131e790eb21f",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Inizia BT nfc",
        "func": "if (!msg.start_bt_nfc)\n    return  null;\nmsg.args = \"--nfc\";\nmsg.start = true;\nmsg.dest = \"nfc\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1120,
        "wires": [
            [
                "3b90ca299d089bd3"
            ]
        ]
    },
    {
        "id": "a428527e091f674f",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Check stop BT cam",
        "func": "var comunic_cam = flow.get(\"comunicazione_cam\");\n\nif (msg.payload == \"1\" && (comunic_cam == undefined || comunic_cam != \"mqtt\")) {\n    flow.set(\"comunicazione_cam\", \"mqtt\");\n    msg.kill = true;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 1540,
        "wires": [
            [
                "7e5e41690cbbcd02"
            ]
        ]
    },
    {
        "id": "67992084d3717707",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Inizia BT cam",
        "func": "if (!msg.start_bt_cam)\n    return  null;\nmsg.args = \"--cam\";\nmsg.start = true;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1580,
        "wires": [
            [
                "7e5e41690cbbcd02"
            ]
        ]
    },
    {
        "id": "50becbe4b40c4b5f",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Check stop BT nfc",
        "func": "var comunic_nfc = flow.get(\"comunicazione_nfc\");\n\nif (msg.payload == \"1\" && (comunic_nfc == undefined || comunic_nfc != \"mqtt\")) {\n    flow.set(\"comunicazione_nfc\", \"mqtt\");\n    msg.kill = true;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1000,
        "wires": [
            [
                "3b90ca299d089bd3"
            ]
        ]
    },
    {
        "id": "b55c88d1966d12e3",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Check MQTT cam interrotta",
        "func": "var comunic_cam = flow.get(\"comunicazione_cam\");\n\nif (msg.payload == \"0\" && (comunic_cam == undefined || comunic_cam != \"bt\")) {\n    flow.set(\"comunicazione_cam\", \"bt\");\n    msg.start_bt_cam = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1620,
        "wires": [
            [
                "67992084d3717707"
            ]
        ]
    },
    {
        "id": "92702d11edc4046d",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Check MQTT nfc interrotta",
        "func": "var comunic_nfc = flow.get(\"comunicazione_nfc\");\n\nif (msg.payload == \"0\" && (comunic_nfc == undefined || comunic_nfc != \"bt\")) {\n    flow.set(\"comunicazione_nfc\", \"bt\");\n    msg.start_bt_nfc = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1140,
        "wires": [
            [
                "0f85131e790eb21f"
            ]
        ]
    },
    {
        "id": "03b2a5b5ab236710",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Forse NFC irraggiungibile",
        "func": "var comunic_nfc = flow.get(\"comunicazione_nfc\");\nif (comunic_nfc == undefined || comunic_nfc == \"bt\"){\n    flow.set(\"comunicazione_nfc\", \"irraggiungibile\");\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "b90c410984616e99",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Forse CAM irraggiungibile",
        "func": "var comunic_cam = flow.get(\"comunicazione_cam\");\nif (comunic_cam == undefined || comunic_cam == \"bt\"){\n    flow.set(\"comunicazione_cam\", \"irraggiungibile\");\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "249e02ccf3a83785",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Se BT acceso e board irraggiungibile -> comunica con BT",
        "func": "if (msg.payload.code != 0)\n    return null;\n\nvar board = msg.label;\n\nif (board.toLowerCase().includes(\"nfc\")){\n    if (flow.get(\"comunicazione_nfc\") == \"irraggiungibile\"){\n        msg.start_bt_nfc = true;\n        msg.label=\"nfc\";\n        msg.payload = \"0\";\n    }\n} else if (board.toLowerCase().includes(\"cam\")) {\n    if (flow.get(\"comunicazione_cam\") == \"irraggiungibile\") {\n        msg.start_bt_cam = true;\n        msg.label = \"cam\";\n        msg.payload = \"0\";\n    }\n} \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 1860,
        "wires": [
            [
                "17dc4be17e3ce317"
            ]
        ]
    },
    {
        "id": "17dc4be17e3ce317",
        "type": "switch",
        "z": "8c18e233c7d90889",
        "name": "",
        "property": "label",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "cam",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nfc",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 1680,
        "wires": [
            [
                "58d9ddaaeec7fc8a"
            ],
            [
                "a1798b6b298ddb5b"
            ]
        ]
    },
    {
        "id": "58d9ddaaeec7fc8a",
        "type": "change",
        "z": "8c18e233c7d90889",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1660,
        "wires": [
            [
                "b55c88d1966d12e3"
            ]
        ]
    },
    {
        "id": "a1798b6b298ddb5b",
        "type": "change",
        "z": "8c18e233c7d90889",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1220,
        "wires": [
            [
                "92702d11edc4046d"
            ]
        ]
    },
    {
        "id": "a6ee9d801a6a7cb7",
        "type": "inject",
        "z": "8c18e233c7d90889",
        "name": "Variabili iniziali",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 700,
        "wires": [
            [
                "8b211500e29680ad"
            ]
        ]
    },
    {
        "id": "8b211500e29680ad",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Set variabili iniziali",
        "func": "flow.set(\"comunicazione_cam\",\"irraggiungibile\");\nflow.set(\"comunicazione_nfc\", \"irraggiungibile\");\nflow.set(\"comunicazione_nodered\", \"irraggiungibile\");\n\nflow.set(\"subs_nfc\", [\n    \"my_devices/door/esp_nfc/config\", \n    \"my_devices/door/esp_nfc/led\",\n    \"my_devices/door/esp_nfc/nfc_reader_state\", \n    \"my_devices/global_config/change_broker\"]);\n\n\nflow.set(\"subs_cam\", [\n    \"my_devices/door/esp_cam/config/freq_send_img\", \n    \"my_devices/door/esp_cam/config/deep_sleep\",\n    \"my_devices/door/esp_cam/config/timeout_send_img\",\n    \"my_devices/door/esp_nfc/button\",\n    \"my_devices/door/esp_cam/reset\",\n    \"my_devices/door/esp_cam/request_send_img\", \n    \"my_devices/global_config/change_broker\"])",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "9e7b4b273f236622",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "New BT message ",
        "func": "// Separo topic e payload\nvar mess_arr = msg.payload;\nlet matchResult = mess_arr.match(/\\[(.*?)\\]\\s*(.*)/);\nif (!matchResult)\n    return null; \n\nlet topic = matchResult[1];\nmsg.topic = topic;\n\nlet payload = matchResult[2];\nmsg.payload = payload;\n\nnode.log(\"topic\" + topic);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 1240,
        "wires": [
            [
                "395643350b26fce8",
                "62de6c9968fc216d"
            ]
        ]
    },
    {
        "id": "032196abd07b6c82",
        "type": "switch",
        "z": "8c18e233c7d90889",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Connesso",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1590,
        "y": 980,
        "wires": [
            [
                "67b947c504e16c6b"
            ],
            [
                "9e7b4b273f236622"
            ]
        ]
    },
    {
        "id": "395643350b26fce8",
        "type": "switch",
        "z": "8c18e233c7d90889",
        "name": "Subscriptions node-red",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "my_devices/door/esp_nfc/tag_swiped",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/door/esp_cam/image",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/door/esp_nfc/button",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/door/esp_nfc/intruder",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/door/esp_nfc/errors",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 2170,
        "y": 1320,
        "wires": [
            [
                "f9322d9408f57b46"
            ],
            [
                "1cce8fa5ab96b93d"
            ],
            [
                "61b1061c4dd0e714"
            ],
            [
                "5d90bde9e6309a4e"
            ],
            [
                "fbc653414df87932"
            ]
        ]
    },
    {
        "id": "1cce8fa5ab96b93d",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "Immagine",
        "mode": "link",
        "links": [
            "518e81a0d326064b"
        ],
        "x": 2415,
        "y": 1340,
        "wires": []
    },
    {
        "id": "f9322d9408f57b46",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "Tag strisciato",
        "mode": "link",
        "links": [
            "8eb16bd75eadf7bd"
        ],
        "x": 2385,
        "y": 1300,
        "wires": []
    },
    {
        "id": "61b1061c4dd0e714",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "e9d789509278d3f9"
        ],
        "x": 2395,
        "y": 1380,
        "wires": []
    },
    {
        "id": "5d90bde9e6309a4e",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "Intruso",
        "mode": "link",
        "links": [
            "a60c677347135904"
        ],
        "x": 2435,
        "y": 1420,
        "wires": []
    },
    {
        "id": "fbc653414df87932",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "Errori",
        "mode": "link",
        "links": [
            "72429e099cc4b6ca"
        ],
        "x": 2435,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f538edd8bc8a01d3",
        "type": "switch",
        "z": "8c18e233c7d90889",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Connesso",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2010,
        "y": 1600,
        "wires": [
            [
                "6e394b1b7279c165"
            ],
            [
                "9e7b4b273f236622"
            ]
        ]
    },
    {
        "id": "62de6c9968fc216d",
        "type": "link out",
        "z": "8c18e233c7d90889",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "4ed927689e34b269"
        ],
        "x": 2425,
        "y": 1200,
        "wires": []
    },
    {
        "id": "f666e3e7acad013d",
        "type": "change",
        "z": "8c18e233c7d90889",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sorgente",
                "pt": "msg",
                "to": "nfc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 980,
        "wires": [
            [
                "032196abd07b6c82"
            ]
        ]
    },
    {
        "id": "2a42f199af7c2850",
        "type": "change",
        "z": "8c18e233c7d90889",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sorgente",
                "pt": "msg",
                "to": "cam",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 1600,
        "wires": [
            [
                "f538edd8bc8a01d3"
            ]
        ]
    },
    {
        "id": "6132409519edca74",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Subscription NFC",
        "func": "// Se il messaggio deve essere comunicato col BT e ha un topix che e' nella lista di\n// topic a cui e' sottoscritta la board, allora gli mando il messaggio\n\nif (flow.get(\"comunicazione_nfc\") == \"bt\") {\n    var topicList = flow.get(\"subs_nfc\");\n    if (topicList.includes(msg.topic))  \n        return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 600,
        "wires": [
            [
                "ade43dd1aff60a1d"
            ]
        ]
    },
    {
        "id": "db1ed666cfb4c6b4",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "Subscription CAM",
        "func": "// Se il messaggio deve essere comunicato col BT e ha un topix che e' nella lista di\n// topic a cui e' sottoscritta la board, allora gli mando il messaggio\n\nif (flow.get(\"comunicazione_cam\") == \"bt\") {\n    var topicList = flow.get(\"subs_cam\");\n    if (topicList.includes(msg.topic))\n        return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 640,
        "wires": [
            [
                "18927d6c14873cf2"
            ]
        ]
    },
    {
        "id": "ade43dd1aff60a1d",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "function 3",
        "func": "msg.payload = \"[\"+msg.topic+\"] \" + msg.payload; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 600,
        "wires": [
            [
                "3b90ca299d089bd3"
            ]
        ]
    },
    {
        "id": "18927d6c14873cf2",
        "type": "function",
        "z": "8c18e233c7d90889",
        "name": "function 4",
        "func": "msg.payload = \"[\"+msg.topic+\"] \" + msg.payload; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 640,
        "wires": [
            [
                "7e5e41690cbbcd02",
                "1d4608ce163fce00"
            ]
        ]
    },
    {
        "id": "0de33e831d9b4c9c",
        "type": "inject",
        "z": "8c18e233c7d90889",
        "name": "Kill process",
        "props": [
            {
                "p": "kill",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 890,
        "y": 1060,
        "wires": [
            [
                "3b90ca299d089bd3"
            ]
        ]
    },
    {
        "id": "79795a7043d6c482",
        "type": "inject",
        "z": "8c18e233c7d90889",
        "name": "Kill process",
        "props": [
            {
                "p": "kill",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1410,
        "y": 1700,
        "wires": [
            [
                "7e5e41690cbbcd02"
            ]
        ]
    },
    {
        "id": "ddc8d88faacdbe74",
        "type": "mqtt out",
        "z": "8c18e233c7d90889",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 930,
        "y": 540,
        "wires": []
    },
    {
        "id": "22c643a21305c065",
        "type": "link in",
        "z": "8c18e233c7d90889",
        "name": "Manda messaggio retain",
        "links": [
            "ff2e5ecdcb78b946",
            "f5680f0a1887ac6a"
        ],
        "x": 775,
        "y": 540,
        "wires": [
            [
                "ddc8d88faacdbe74"
            ]
        ]
    },
    {
        "id": "1d4608ce163fce00",
        "type": "debug",
        "z": "8c18e233c7d90889",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 740,
        "wires": []
    },
    {
        "id": "9525e415c9d89a85",
        "type": "debug",
        "z": "8c18e233c7d90889",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 220,
        "y": 500,
        "wires": []
    },
    {
        "id": "a3b79a265996b69b",
        "type": "inject",
        "z": "e033c8a02dcd63b3",
        "name": "Variabili iniziali",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 80,
        "wires": [
            [
                "ca2bf5c7e0484f63"
            ]
        ]
    },
    {
        "id": "ca2bf5c7e0484f63",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Set variabili iniziali",
        "func": "// if (!flow.get(\"old_comunicazione_cam\") == undefined)\n//     return;\n\nflow.set(\"old_comunicazione_cam\", \"irraggiungibile\");\nflow.set(\"old_comunicazione_nfc\", \"irraggiungibile\");\nflow.set(\"old_comunicazione_nodered\", \"irraggiungibile\");\n\nflow.set(\"comunicazione_cam\",\"irraggiungibile\");\nflow.set(\"comunicazione_nfc\", \"irraggiungibile\");\nflow.set(\"comunicazione_nodered\", \"irraggiungibile\");\n\nflow.set(\"subs_nfc\", [\n    \"my_devices/door/esp_nfc/config\", \n    \"my_devices/door/esp_nfc/led\",\n    \"my_devices/door/esp_nfc/nfc_reader_state\", \n    \"my_devices/global_config/change_broker\"]);\n\n\nflow.set(\"subs_cam\", [\n    \"my_devices/door/esp_cam/config/freq_send_img\", \n    \"my_devices/door/esp_cam/config/deep_sleep\",\n    \"my_devices/door/esp_cam/config/timeout_send_img\",\n    \"my_devices/door/esp_nfc/button\",\n    \"my_devices/door/esp_cam/reset\",\n    \"my_devices/door/esp_cam/request_send_img\", \n    \"my_devices/global_config/change_broker\"])",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e12ef72093a355ac",
        "type": "status",
        "z": "e033c8a02dcd63b3",
        "name": "Status connessione broker",
        "scope": [
            "8e91a3a36fdc835c"
        ],
        "x": 390,
        "y": 240,
        "wires": [
            [
                "20caac218c202fd6"
            ]
        ]
    },
    {
        "id": "20caac218c202fd6",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Check connessione broker + eventualmente inizia BT",
        "func": "// Status viene chiamato ogni 17 secondi\nvar stato = msg.status.text;\nvar parts = stato.split(\".\");\nvar lastPart = parts[parts.length - 1];\n\nvar old_com = flow.get(\"comunicazione_nodered\");\n\nif (lastPart == \"connected\" ){\n    msg.payload = \"Connesso\";\n\n    // Se nodered riesce a collegarsi al broker mqtt, setto la comuniczione a \"mqtt\"\n    if (old_com == undefined || old_com != \"mqtt\") {\n        flow.set(\"comunicazione_nodered\", \"mqtt\");\n    }\n\n}else {\n    msg.payload = \"Disconnesso\";\n    // Se nodered NON riesce a collegarsi al broker mqtt, setto la comuniczione a \"bt\"\n    if (old_com == undefined || old_com != \"bt\"){\n        flow.set(\"comunicazione_nodered\", \"bt\");\n        flow.set(\"comunicazione_cam\", \"bt\");\n        flow.set(\"comunicazione_nfc\", \"bt\");\n\n        msg.start_bt_cam = true;\n        msg.start_bt_nfc = true;\n    }\n\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8e91a3a36fdc835c",
        "type": "mqtt in",
        "z": "e033c8a02dcd63b3",
        "name": "",
        "topic": "my_devices/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5fc506fa5056c6fc",
        "type": "ui_text",
        "z": "e033c8a02dcd63b3",
        "group": "cd718b65b0c0bc62",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Comunicazione con CAM:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1650,
        "y": 600,
        "wires": []
    },
    {
        "id": "ab8f8c536a9cf33a",
        "type": "inject",
        "z": "e033c8a02dcd63b3",
        "name": "Aggiorna connessioni boards",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 640,
        "wires": [
            [
                "5c1076c7e8aebc56"
            ]
        ]
    },
    {
        "id": "5c1076c7e8aebc56",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Check CAM stato cambiato + upate dashboard",
        "func": "\n\nmsg.payload = flow.get(\"comunicazione_cam\");\nvar old = flow.get(\"old_comunicazione_cam\");\nif (msg.payload != old){\n    // Comunicazione cam e' stata cambiata\n    // TODO\n\n    /*\n    \n    Possibili stati: irraggiungibile, mqtt, bt\n\n    ------  QUANDO PASSO DA UNO STATO A UN ALTRO? --------\n        Passo a irraggiungibile:\n            -> all'inizio di node-red\n            -> se lo script python e' terminato ed ero nello stato bt\n        Passo a mqtt:\n            -> se da mqtt state arriva 1\n        Passo a bt:\n            -> se da mqtt state arriva 0 e stavo comunicando con mqtt o ero irraggiungibile\n            -> se lo script python stampa \"Connesso\"\n    \n\n    ------- COSA SUCCEDE SE SI PASSA DA UNO STATO A UN ALTRO? --------\n        Se passo da irraggiungibile a mqtt -> nulla */\n\n   \n    //  Se passo da irraggiungibile a bt -> nulla\n    if(old == \"irraggiungibile\" && msg.payload == \"bt\"){\n        msg.da_fare = \"start_sript_bt\";\n    }\n        \n    // Se passo da mqtt a irraggiungibile -> passo a bt -> start script\n    if (old == \"mqtt\" && msg.payload == \"irraggiungibile\"){\n        node.log(\"2\");\n        msg.da_fare = \"start_sript_bt\";\n        // flow.set(\"comunicazione_cam\", \"bt\");\n    }\n    \n    // Se passo da mqtt a bt -> start script \n    if (old == \"mqtt\" && msg.payload == \"bt\") {\n        node.log(\"3\");\n        msg.da_fare = \"start_sript_bt\";\n        // flow.set(\"comunicazione_cam\", \"bt\");\n    }\n\n\n    //    Se passo da bt a irraggiungibile -> la riconnessione verra' riprovata dopo al max 10 sec\n    // if (old == \"bt\" && msg.payload == \"irraggiungibile\"){\n        // node.log(\"6\");\n        // flow.set(\"comunicazione_cam\", \"provo_bt\");\n    // }\n\n    // Se passo da bt a mqtt -> killo script\n    if (old == \"bt\" && msg.payload == \"mqtt\"){\n        node.log(\"7\");\n        msg.da_fare = \"kill_sript_bt\";\n    }\n    \n    \n    \n    flow.set(\"old_comunicazione_cam\", msg.payload);\n}   \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 640,
        "wires": [
            [
                "5fc506fa5056c6fc",
                "159fe82693847afe"
            ]
        ]
    },
    {
        "id": "74e43deaab9a01fe",
        "type": "mqtt in",
        "z": "e033c8a02dcd63b3",
        "name": "",
        "topic": "my_devices/door/esp_cam/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 560,
        "wires": [
            [
                "0b0da21d36ddc122"
            ]
        ]
    },
    {
        "id": "0b0da21d36ddc122",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Passa a \"mqtt\" o \"bt\"",
        "func": "if (msg.payload == \"1\")\n    flow.set(\"comunicazione_cam\", \"mqtt\");\nelse if (flow.get(\"comunicazione_cam\") != \"bt\") \n    // Se board si scollega da mqtt e non sto comunicando con bt, ritento la comunicazione bt\n    flow.set(\"comunicazione_cam\", \"bt\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "25ebba5b410a7376",
        "type": "daemon",
        "z": "e033c8a02dcd63b3",
        "name": "Bluetooth CAM",
        "command": "python.exe",
        "args": "..\\bluetooth_pc\\bt_connect_multithread.py",
        "autorun": false,
        "cr": true,
        "redo": false,
        "op": "string",
        "closer": "SIGKILL",
        "x": 1320,
        "y": 780,
        "wires": [
            [
                "79fb90d79d5316da"
            ],
            [],
            [
                "2c76d6c3bc858438"
            ]
        ]
    },
    {
        "id": "2c76d6c3bc858438",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Forse board irraggiungibile",
        "func": "if (flow.get(\"comunicazione_cam\") == \"bt\" || flow.get(\"comunicazione_cam\") == \"bt_connesso\")\n    flow.set(\"comunicazione_cam\",\"irraggiungibile\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "79fb90d79d5316da",
        "type": "switch",
        "z": "e033c8a02dcd63b3",
        "name": "Check \"connesso\" o output",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Connesso",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 760,
        "wires": [
            [
                "93b966758cc4d3e9"
            ],
            [
                "632d73045a9397de"
            ]
        ]
    },
    {
        "id": "93b966758cc4d3e9",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Segnalo la connessione bt",
        "func": "flow.set(\"comunicazione_cam\", \"bt_connesso\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "159fe82693847afe",
        "type": "switch",
        "z": "e033c8a02dcd63b3",
        "name": "",
        "property": "da_fare",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "start_sript_bt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "kill_sript_bt",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 780,
        "wires": [
            [
                "f54a669a1dbbacb7"
            ],
            [
                "94112e81df8cedc9"
            ]
        ]
    },
    {
        "id": "f54a669a1dbbacb7",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Start BT cam",
        "func": "msg.args = \"--cam\";\nmsg.start = true;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 780,
        "wires": [
            [
                "25ebba5b410a7376",
                "a3c98639cd6574a8"
            ]
        ]
    },
    {
        "id": "94112e81df8cedc9",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Kill process",
        "func": "msg.kill = true; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 840,
        "wires": [
            [
                "25ebba5b410a7376",
                "64f80d7128fe0211"
            ]
        ]
    },
    {
        "id": "3f65dd3c8170d813",
        "type": "inject",
        "z": "e033c8a02dcd63b3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 840,
        "wires": [
            [
                "94112e81df8cedc9"
            ]
        ]
    },
    {
        "id": "632d73045a9397de",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "New BT message ",
        "func": "// Separo topic e payload\nvar mess_arr = msg.payload;\nlet matchResult = mess_arr.match(/\\[(.*?)\\]\\s*(.*)/);\nif (!matchResult)\n    return null; \n\nlet topic = matchResult[1];\nmsg.topic = topic;\n\nlet payload = matchResult[2];\nmsg.payload = payload;\n\nnode.log(\"topic\" + topic);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 780,
        "wires": [
            [
                "f75e5619c4fdeb47"
            ]
        ]
    },
    {
        "id": "f75e5619c4fdeb47",
        "type": "switch",
        "z": "e033c8a02dcd63b3",
        "name": "Subscriptions node-red",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "my_devices/door/esp_cam/image",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2130,
        "y": 760,
        "wires": [
            [
                "463a704259457186"
            ]
        ]
    },
    {
        "id": "463a704259457186",
        "type": "link out",
        "z": "e033c8a02dcd63b3",
        "name": "Immagine",
        "mode": "link",
        "links": [
            "518e81a0d326064b"
        ],
        "x": 2345,
        "y": 760,
        "wires": []
    },
    {
        "id": "29371f8fc0ef3014",
        "type": "link out",
        "z": "e033c8a02dcd63b3",
        "name": "Tag strisciato",
        "mode": "link",
        "links": [
            "8eb16bd75eadf7bd"
        ],
        "x": 2315,
        "y": 1580,
        "wires": []
    },
    {
        "id": "689e1a7ddd93418d",
        "type": "link out",
        "z": "e033c8a02dcd63b3",
        "d": true,
        "name": "Campanello suonato",
        "mode": "link",
        "links": [
            "e9d789509278d3f9"
        ],
        "x": 2445,
        "y": 1660,
        "wires": []
    },
    {
        "id": "92a1b36bbc5cfd55",
        "type": "link out",
        "z": "e033c8a02dcd63b3",
        "d": true,
        "name": "Intruso",
        "mode": "link",
        "links": [
            "a60c677347135904"
        ],
        "x": 2365,
        "y": 1700,
        "wires": []
    },
    {
        "id": "bad121c6502fb625",
        "type": "link out",
        "z": "e033c8a02dcd63b3",
        "name": "Errori",
        "mode": "link",
        "links": [
            "72429e099cc4b6ca"
        ],
        "x": 2285,
        "y": 1800,
        "wires": []
    },
    {
        "id": "688ff90fab084ae5",
        "type": "comment",
        "z": "e033c8a02dcd63b3",
        "name": "",
        "info": "Se l'immagine e' arrivata con il BT, non la pubblico su mqtt da node red perche' tanto l'altra board non è sottoscritta al topic in cui pubblico l'immagine.\nSe avessi un device sottoscritto a tale topic, avrei dovuto pubblicarla",
        "x": 2440,
        "y": 760,
        "wires": []
    },
    {
        "id": "98a6f3a8838eb818",
        "type": "link in",
        "z": "e033c8a02dcd63b3",
        "name": "link in 1",
        "links": [
            "24107174129b8318",
            "348554f2e28f0263",
            "3d919d0bb7aff126",
            "783b1918abc47099",
            "85247eaccfcb5651",
            "b458d83fe470509a",
            "cd3c846e4e60ed19",
            "d5fbf340676057d0",
            "ebd45a88251b59c4",
            "f5680f0a1887ac6a",
            "ff2e5ecdcb78b946"
        ],
        "x": 945,
        "y": 940,
        "wires": [
            [
                "876325c7b41539d9",
                "8c9470bd4d5e4115"
            ]
        ]
    },
    {
        "id": "876325c7b41539d9",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Manda input CAM",
        "func": "// Se la cam e' attualmente connessa col BT e il messaggio da mandare e' nella lista delle \n// sottoscrizioni della cam, allora gli mando il messaggio \nif (flow.get(\"comunicazione_cam\") == \"bt_connesso\") {\n    var topicList = flow.get(\"subs_cam\");\n    if (topicList.includes(msg.topic)){\n        msg.payload = \"[\" + msg.topic + \"] \" + msg.payload; \n        return msg;\n    }\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 940,
        "wires": [
            [
                "25ebba5b410a7376",
                "066c995fe070a94b"
            ]
        ]
    },
    {
        "id": "a3c98639cd6574a8",
        "type": "debug",
        "z": "e033c8a02dcd63b3",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 680,
        "wires": []
    },
    {
        "id": "64f80d7128fe0211",
        "type": "debug",
        "z": "e033c8a02dcd63b3",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 920,
        "wires": []
    },
    {
        "id": "066c995fe070a94b",
        "type": "debug",
        "z": "e033c8a02dcd63b3",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 1000,
        "wires": []
    },
    {
        "id": "83dfabc9b9cf190d",
        "type": "inject",
        "z": "e033c8a02dcd63b3",
        "name": "Se board irraggiungibile -> riprova con BT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 860,
        "wires": [
            [
                "ae37693b1f762b9d"
            ]
        ]
    },
    {
        "id": "ae37693b1f762b9d",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "function 5",
        "func": "if (flow.get(\"comunicazione_cam\") == \"irraggiungibile\")\n    flow.set(\"comunicazione_cam\", \"bt\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "8c9470bd4d5e4115",
        "type": "debug",
        "z": "e033c8a02dcd63b3",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1000,
        "wires": []
    },
    {
        "id": "914e8c025e39fa0f",
        "type": "comment",
        "z": "e033c8a02dcd63b3",
        "name": "CAM",
        "info": "",
        "x": 270,
        "y": 480,
        "wires": []
    },
    {
        "id": "c4b3d3795f27df75",
        "type": "ui_text",
        "z": "e033c8a02dcd63b3",
        "group": "cd718b65b0c0bc62",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Comunicazione con NFC:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 1440,
        "wires": []
    },
    {
        "id": "6ea38fb1ec1ed474",
        "type": "inject",
        "z": "e033c8a02dcd63b3",
        "name": "Aggiorna connessioni boards",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 1480,
        "wires": [
            [
                "0dcb7d40c839f869"
            ]
        ]
    },
    {
        "id": "0dcb7d40c839f869",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Check NFCstato cambiato + upate dashboard",
        "func": "\n\nmsg.payload = flow.get(\"comunicazione_nfc\");\nvar old = flow.get(\"old_comunicazione_nfc\");\nif (msg.payload != old){\n    // Comunicazione nfc e' stata nfcbiata\n    // TODO\n\n    /*\n    \n    Possibili stati: irraggiungibile, mqtt, bt\n\n    ------  QUANDO PASSO DA UNO STATO A UN ALTRO? --------\n        Passo a irraggiungibile:\n            -> all'inizio di node-red\n            -> se lo script python e' terminato ed ero nello stato bt\n        Passo a mqtt:\n            -> se da mqtt state arriva 1\n        Passo a bt:\n            -> se da mqtt state arriva 0 e stavo comunicando con mqtt o ero irraggiungibile\n            -> se lo script python stampa \"Connesso\"\n    \n\n    ------- COSA SUCCEDE SE SI PASSA DA UNO STATO A UN ALTRO? --------\n        Se passo da irraggiungibile a mqtt -> nulla */\n\n   \n    //  Se passo da irraggiungibile a bt -> nulla\n    if(old == \"irraggiungibile\" && msg.payload == \"bt\"){\n        msg.da_fare = \"start_sript_bt\";\n    }\n        \n    // Se passo da mqtt a irraggiungibile -> passo a bt -> start script\n    if (old == \"mqtt\" && msg.payload == \"irraggiungibile\"){\n        node.log(\"2\");\n        msg.da_fare = \"start_sript_bt\";\n        // flow.set(\"comunicazione_nfc\", \"bt\");\n    }\n    \n    // Se passo da mqtt a bt -> start script \n    if (old == \"mqtt\" && msg.payload == \"bt\") {\n        node.log(\"3\");\n        msg.da_fare = \"start_sript_bt\";\n        // flow.set(\"comunicazione_nfc\", \"bt\");\n    }\n\n\n    //    Se passo da bt a irraggiungibile -> la riconnessione verra' riprovata dopo al max 10 sec\n    // if (old == \"bt\" && msg.payload == \"irraggiungibile\"){\n        // node.log(\"6\");\n        // flow.set(\"comunicazione_nfc\", \"provo_bt\");\n    // }\n\n    // Se passo da bt a mqtt -> killo script\n    if (old == \"bt\" && msg.payload == \"mqtt\"){\n        node.log(\"7\");\n        msg.da_fare = \"kill_sript_bt\";\n    }\n    \n    \n    \n    flow.set(\"old_comunicazione_nfc\", msg.payload);\n}   \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1480,
        "wires": [
            [
                "c4b3d3795f27df75",
                "494e254307d1d366"
            ]
        ]
    },
    {
        "id": "9022daa16c50d991",
        "type": "mqtt in",
        "z": "e033c8a02dcd63b3",
        "name": "",
        "topic": "my_devices/door/esp_nfc/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1400,
        "wires": [
            [
                "b9fab51f0d3f1bf7"
            ]
        ]
    },
    {
        "id": "b9fab51f0d3f1bf7",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Passa a \"mqtt\" o \"bt\"",
        "func": "if (msg.payload == \"1\")\n    flow.set(\"comunicazione_nfc\", \"mqtt\");\nelse if (flow.get(\"comunicazione_nfc\") != \"bt\") \n    // Se board si scollega da mqtt e non sto comunicando con bt, ritento la comunicazione bt\n    flow.set(\"comunicazione_nfc\", \"bt\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "d8e79064e9dfd664",
        "type": "daemon",
        "z": "e033c8a02dcd63b3",
        "name": "Bluetooth NFC",
        "command": "python.exe",
        "args": "..\\bluetooth_pc\\bt_connect_multithread.py",
        "autorun": false,
        "cr": true,
        "redo": false,
        "op": "string",
        "closer": "SIGKILL",
        "x": 1280,
        "y": 1620,
        "wires": [
            [
                "bd713d28426df5e9"
            ],
            [],
            [
                "417b806cee4f3188"
            ]
        ]
    },
    {
        "id": "417b806cee4f3188",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Forse board irraggiungibile",
        "func": "if (flow.get(\"comunicazione_nfc\") == \"bt\" || flow.get(\"comunicazione_nfc\") == \"bt_connesso\")\n    flow.set(\"comunicazione_nfc\",\"irraggiungibile\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "bd713d28426df5e9",
        "type": "switch",
        "z": "e033c8a02dcd63b3",
        "name": "Check \"connesso\" o output",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Connesso",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1540,
        "y": 1600,
        "wires": [
            [
                "a94706bfe071f573"
            ],
            [
                "b039e12e85ac2f66"
            ]
        ]
    },
    {
        "id": "a94706bfe071f573",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Segnalo la connessione bt",
        "func": "flow.set(\"comunicazione_nfc\", \"bt_connesso\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "494e254307d1d366",
        "type": "switch",
        "z": "e033c8a02dcd63b3",
        "name": "",
        "property": "da_fare",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "start_sript_bt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "kill_sript_bt",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 1620,
        "wires": [
            [
                "7216c656be90d9b6"
            ],
            [
                "104581d38dd99c14"
            ]
        ]
    },
    {
        "id": "7216c656be90d9b6",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Start BT nfc",
        "func": "msg.args = \"--nfc\";\nmsg.start = true;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1620,
        "wires": [
            [
                "d8e79064e9dfd664"
            ]
        ]
    },
    {
        "id": "104581d38dd99c14",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Kill process",
        "func": "msg.kill = true; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1680,
        "wires": [
            [
                "d8e79064e9dfd664"
            ]
        ]
    },
    {
        "id": "9913a294dd7ed696",
        "type": "inject",
        "z": "e033c8a02dcd63b3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 840,
        "y": 1680,
        "wires": [
            [
                "104581d38dd99c14"
            ]
        ]
    },
    {
        "id": "b039e12e85ac2f66",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "New BT message ",
        "func": "// Separo topic e payload\nvar mess_arr = msg.payload;\nlet matchResult = mess_arr.match(/\\[(.*?)\\]\\s*(.*)/);\nif (!matchResult)\n    return null; \n\nlet topic = matchResult[1];\nmsg.topic = topic;\n\nlet payload = matchResult[2];\nmsg.payload = payload;\n\nnode.log(\"topic\" + topic);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 1620,
        "wires": [
            [
                "0aabf9bddeddd6ce"
            ]
        ]
    },
    {
        "id": "7a837c882f6b41c7",
        "type": "comment",
        "z": "e033c8a02dcd63b3",
        "name": "",
        "info": "Se l'immagine e' arrivata con il BT, non la pubblico su mqtt da node red perche' tanto l'altra board non è sottoscritta al topic in cui pubblico l'immagine.\nSe avessi un device sottoscritto a tale topic, avrei dovuto pubblicarla",
        "x": 2400,
        "y": 1600,
        "wires": []
    },
    {
        "id": "38032b323723dc1c",
        "type": "link in",
        "z": "e033c8a02dcd63b3",
        "name": "link in 2",
        "links": [
            "24107174129b8318",
            "348554f2e28f0263",
            "3d919d0bb7aff126",
            "783b1918abc47099",
            "85247eaccfcb5651",
            "b458d83fe470509a",
            "cd3c846e4e60ed19",
            "d5fbf340676057d0",
            "ebd45a88251b59c4",
            "f5680f0a1887ac6a",
            "ff2e5ecdcb78b946"
        ],
        "x": 905,
        "y": 1780,
        "wires": [
            [
                "9bf110208d44d960"
            ]
        ]
    },
    {
        "id": "9bf110208d44d960",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "Manda input NFC",
        "func": "// Se la nfc e' attualmente connessa col BT e il messaggio da mandare e' nella lista delle \n// sottoscrizioni della nfc, allora gli mando il messaggio \nif (flow.get(\"comunicazione_nfc\") == \"bt_connesso\") {\n    var topicList = flow.get(\"subs_nfc\");\n    if (topicList.includes(msg.topic)){\n        msg.payload = \"[\" + msg.topic + \"] \" + msg.payload; \n        return msg;\n    }\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1780,
        "wires": [
            [
                "d8e79064e9dfd664"
            ]
        ]
    },
    {
        "id": "05f04afb637228fa",
        "type": "inject",
        "z": "e033c8a02dcd63b3",
        "name": "Se board irraggiungibile -> riprova con BT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1700,
        "wires": [
            [
                "5c32422378c0ca3a"
            ]
        ]
    },
    {
        "id": "5c32422378c0ca3a",
        "type": "function",
        "z": "e033c8a02dcd63b3",
        "name": "function 6",
        "func": "if (flow.get(\"comunicazione_nfc\") == \"irraggiungibile\")\n    flow.set(\"comunicazione_nfc\", \"bt\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "56f2b4f77a1060fc",
        "type": "comment",
        "z": "e033c8a02dcd63b3",
        "name": "NFC",
        "info": "",
        "x": 170,
        "y": 1340,
        "wires": []
    },
    {
        "id": "0aabf9bddeddd6ce",
        "type": "switch",
        "z": "e033c8a02dcd63b3",
        "name": "Subscriptions node-red",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "my_devices/door/esp_nfc/tag_swiped",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/door/esp_nfc/button",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/door/esp_nfc/intruder",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/door/esp_nfc/errors",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 2090,
        "y": 1640,
        "wires": [
            [
                "29371f8fc0ef3014"
            ],
            [
                "689e1a7ddd93418d",
                "2e119f21d2525375"
            ],
            [
                "92a1b36bbc5cfd55",
                "2e119f21d2525375"
            ],
            [
                "bad121c6502fb625"
            ]
        ]
    },
    {
        "id": "2e119f21d2525375",
        "type": "mqtt out",
        "z": "e033c8a02dcd63b3",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 2530,
        "y": 1620,
        "wires": []
    },
    {
        "id": "7cf2c4b3c5c8f32d",
        "type": "debug",
        "z": "f42f0c6ac0c908c0",
        "name": "Intruso",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 660,
        "wires": []
    },
    {
        "id": "f83188491fc86816",
        "type": "function",
        "z": "f42f0c6ac0c908c0",
        "name": "\"Intruso:\" + tag",
        "func": "msg.payload = \"Intruso rilevato: \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 660,
        "wires": [
            [
                "7cf2c4b3c5c8f32d"
            ]
        ]
    },
    {
        "id": "02327267871b92aa",
        "type": "function",
        "z": "f42f0c6ac0c908c0",
        "name": "\"Tag letto: \" + tag",
        "func": "msg.payload = \"Tag letto: \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 80,
        "wires": [
            [
                "e53730711f62599f"
            ]
        ]
    },
    {
        "id": "e53730711f62599f",
        "type": "debug",
        "z": "f42f0c6ac0c908c0",
        "name": "Tag letto",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 80,
        "wires": []
    },
    {
        "id": "519bd7f7bc203d53",
        "type": "ui_toast",
        "z": "f42f0c6ac0c908c0",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Tag strisciato: ",
        "name": "Notifica tag strisciato",
        "x": 660,
        "y": 160,
        "wires": []
    },
    {
        "id": "efcf21eccca58f39",
        "type": "ui_button",
        "z": "f42f0c6ac0c908c0",
        "name": "Sblocca lettore NFC",
        "group": "68b41a4217490954",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Sblocca lettore NFC",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 1000,
        "y": 500,
        "wires": [
            [
                "5fc8a5d1f5b0b9a6",
                "0661b74d309fa008"
            ]
        ]
    },
    {
        "id": "972c6ab9e76e06a8",
        "type": "ui_toast",
        "z": "f42f0c6ac0c908c0",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Intruso rilevato: ",
        "name": "Intruso rilevato",
        "x": 460,
        "y": 580,
        "wires": [
            [
                "e9e81eb8ca461278"
            ]
        ]
    },
    {
        "id": "13e6bdf1fa517670",
        "type": "ui_text",
        "z": "f42f0c6ac0c908c0",
        "group": "68b41a4217490954",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Stato lettore NFC:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 990,
        "y": 680,
        "wires": []
    },
    {
        "id": "e9e81eb8ca461278",
        "type": "function",
        "z": "f42f0c6ac0c908c0",
        "name": "Stato reader: bloccato",
        "func": "msg.payload = \"Bloccato\";\nmsg.enabled = true;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 580,
        "wires": [
            [
                "13e6bdf1fa517670",
                "efcf21eccca58f39"
            ]
        ]
    },
    {
        "id": "5fc8a5d1f5b0b9a6",
        "type": "function",
        "z": "f42f0c6ac0c908c0",
        "name": "Stato reader: Abilitato",
        "func": "msg.payload = \"Abilitato\";\nmsg.enabled = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 580,
        "wires": [
            [
                "efcf21eccca58f39",
                "6658215bf2bc0338",
                "13e6bdf1fa517670"
            ]
        ]
    },
    {
        "id": "6658215bf2bc0338",
        "type": "debug",
        "z": "f42f0c6ac0c908c0",
        "name": "Sbloco la lettura NFC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 580,
        "wires": []
    },
    {
        "id": "e1fbbce3606240b8",
        "type": "inject",
        "z": "f42f0c6ac0c908c0",
        "name": "Sblocco Iniziale",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "topic",
                "vt": "msg"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 1040,
        "y": 380,
        "wires": [
            [
                "5fc8a5d1f5b0b9a6",
                "0661b74d309fa008"
            ]
        ]
    },
    {
        "id": "8eb16bd75eadf7bd",
        "type": "link in",
        "z": "f42f0c6ac0c908c0",
        "name": "Tag strisciato",
        "links": [
            "cb0e70cb334fcc37",
            "f9322d9408f57b46",
            "29371f8fc0ef3014"
        ],
        "x": 385,
        "y": 140,
        "wires": [
            [
                "02327267871b92aa",
                "519bd7f7bc203d53"
            ]
        ]
    },
    {
        "id": "a60c677347135904",
        "type": "link in",
        "z": "f42f0c6ac0c908c0",
        "name": "Intruso",
        "links": [
            "5d90bde9e6309a4e",
            "7c7f5fdd0557d647",
            "92a1b36bbc5cfd55"
        ],
        "x": 235,
        "y": 540,
        "wires": [
            [
                "972c6ab9e76e06a8",
                "f83188491fc86816"
            ]
        ]
    },
    {
        "id": "85247eaccfcb5651",
        "type": "link out",
        "z": "f42f0c6ac0c908c0",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "98a6f3a8838eb818",
            "e87b3b74df0bf879",
            "38032b323723dc1c"
        ],
        "x": 1455,
        "y": 420,
        "wires": []
    },
    {
        "id": "0661b74d309fa008",
        "type": "function",
        "z": "f42f0c6ac0c908c0",
        "name": "Set message",
        "func": "msg.topic = \"my_devices/door/esp_nfc/nfc_reader_state\";\nmsg.payload = \"1\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 420,
        "wires": [
            [
                "85247eaccfcb5651",
                "2e97f2d734deac13"
            ]
        ]
    },
    {
        "id": "ca3d3f16612dcbb6",
        "type": "mqtt in",
        "z": "f42f0c6ac0c908c0",
        "name": "",
        "topic": "my_devices/door/esp_nfc/tag_swiped",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "02327267871b92aa",
                "519bd7f7bc203d53"
            ]
        ]
    },
    {
        "id": "1188503c93f9e768",
        "type": "mqtt in",
        "z": "f42f0c6ac0c908c0",
        "name": "",
        "topic": "my_devices/door/esp_nfc/intruder",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 640,
        "wires": [
            [
                "972c6ab9e76e06a8",
                "f83188491fc86816",
                "348554f2e28f0263"
            ]
        ]
    },
    {
        "id": "2e97f2d734deac13",
        "type": "mqtt out",
        "z": "f42f0c6ac0c908c0",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 1530,
        "y": 380,
        "wires": []
    },
    {
        "id": "348554f2e28f0263",
        "type": "link out",
        "z": "f42f0c6ac0c908c0",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "98a6f3a8838eb818",
            "38032b323723dc1c"
        ],
        "x": 345,
        "y": 740,
        "wires": []
    },
    {
        "id": "9a56b32916771b6e",
        "type": "inject",
        "z": "3215fe15d9aa44e7",
        "name": "Apri Porta",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_nfc/led",
        "payload": "1",
        "payloadType": "str",
        "x": 660,
        "y": 100,
        "wires": [
            [
                "b458d83fe470509a",
                "9caec3a140c566a0"
            ]
        ]
    },
    {
        "id": "bd62980b1bc5d6fe",
        "type": "ui_button",
        "z": "3215fe15d9aa44e7",
        "name": "Apri porta ",
        "group": "86f322ebf8049f50",
        "order": 3,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "Apri porta ",
        "tooltip": "",
        "color": "black",
        "bgcolor": "lightgreen",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "my_devices/door/esp_nfc/led",
        "topicType": "str",
        "x": 660,
        "y": 40,
        "wires": [
            [
                "b458d83fe470509a",
                "9caec3a140c566a0"
            ]
        ]
    },
    {
        "id": "162b9ae52d7e8e72",
        "type": "debug",
        "z": "3215fe15d9aa44e7",
        "name": "Campanello suonato",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 320,
        "wires": []
    },
    {
        "id": "95cd540de2b12196",
        "type": "function",
        "z": "3215fe15d9aa44e7",
        "name": "\"Campanello suonato!\" else null",
        "func": "if (msg.payload==\"1\")\n    msg.payload = \"Campanello suonato\";\n    else \n        return null;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 320,
        "wires": [
            [
                "162b9ae52d7e8e72",
                "d61463181f808d0e",
                "112d45c2f360f21b"
            ]
        ]
    },
    {
        "id": "22f1018eb784b46f",
        "type": "ui_audio",
        "z": "3215fe15d9aa44e7",
        "name": "Campanello ",
        "group": "86f322ebf8049f50",
        "voice": "Microsoft Cosimo - Italian (Italy)",
        "always": false,
        "x": 950,
        "y": 400,
        "wires": []
    },
    {
        "id": "d61463181f808d0e",
        "type": "ui_toast",
        "z": "3215fe15d9aa44e7",
        "position": "top right",
        "displayTime": "3",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": " Campanello suonato!",
        "name": "Campanello suonato!",
        "x": 820,
        "y": 260,
        "wires": [],
        "info": "<p> ciao </p>"
    },
    {
        "id": "112d45c2f360f21b",
        "type": "function",
        "z": "3215fe15d9aa44e7",
        "name": "Din Dong",
        "func": "msg.payload = \"din dong\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 400,
        "wires": [
            [
                "22f1018eb784b46f"
            ]
        ]
    },
    {
        "id": "e65ad8b68ef7a0a6",
        "type": "debug",
        "z": "3215fe15d9aa44e7",
        "name": "Foto arrivata",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b458d83fe470509a",
        "type": "link out",
        "z": "3215fe15d9aa44e7",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "4ed927689e34b269",
            "98a6f3a8838eb818",
            "38032b323723dc1c"
        ],
        "x": 875,
        "y": 40,
        "wires": []
    },
    {
        "id": "e9d789509278d3f9",
        "type": "link in",
        "z": "3215fe15d9aa44e7",
        "name": "Campanello suonato",
        "links": [
            "61b1061c4dd0e714",
            "9c638ad8aa6b7d20",
            "689e1a7ddd93418d"
        ],
        "x": 245,
        "y": 320,
        "wires": [
            [
                "95cd540de2b12196"
            ]
        ]
    },
    {
        "id": "518e81a0d326064b",
        "type": "link in",
        "z": "3215fe15d9aa44e7",
        "name": "immagine",
        "links": [
            "fec084381cfe638b",
            "1cce8fa5ab96b93d",
            "463a704259457186",
            "8a84b984d0063a27"
        ],
        "x": 475,
        "y": 1040,
        "wires": [
            [
                "6260282ed6e535a0",
                "13de99df3e54ae05"
            ]
        ]
    },
    {
        "id": "fb56339fa80b86e8",
        "type": "ui_text",
        "z": "3215fe15d9aa44e7",
        "group": "86f322ebf8049f50",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Foto arrivata: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1160,
        "wires": []
    },
    {
        "id": "13de99df3e54ae05",
        "type": "ui_template",
        "z": "3215fe15d9aa44e7",
        "group": "86f322ebf8049f50",
        "name": "Mostra foto",
        "order": 2,
        "width": "6",
        "height": "6",
        "format": "<canvas id=\"canvas\" style=\"border:solid;\"> </canvas>\n<!-- <div id=\"messages\"></div> -->\n<script>\n    var first = 0;  // Usato per inizializzare il canvas\n\n    var xres = 80; // Larghezza foto\n    var yres = 60; // Altezza foto\n    var ctx; // Serve per la \"stampa\" della foto\n    var imgData; // Serve per la stampa della foto\n    var gcanvasid = \"canvas\"; // id del canvas che conterra' la foto\n\n    function hexStringToUint8Array(hexString) {\n        // Remove any non-hex characters (like spaces or newline characters)\n        hexString = String(hexString);\n        hexString = hexString.replace(/[^0-9a-fA-F]/g, '');\n\n        // Split the string into pairs of two\n        const pairs = hexString.match(/.{1,2}/g);\n\n        // Convert each pair to a byte value\n        const byteArray = pairs.map((pair) => parseInt(pair, 16));\n\n        // Create a Uint8Array from the byte values\n        return new Uint8Array(byteArray);\n    }\n\n    function init_canvas() {\n\n        canvas = document.getElementById(\"canvas\");\n        canvas.width = xres;\n        canvas.height = yres;\n\n        ctx = canvas.getContext(\"2d\");\n        imgData = ctx.createImageData(canvas.width, canvas.height);\n\n        for (var i = 0; i < imgData.data.length; i +=4) {\n            imgData.data[i + 0] = 0xCC;\n            imgData.data[i + 1] = 0xCC;\n            imgData.data[i + 2] = 0xCC;\n            imgData.data[i + 3] = 255;\n        }\n        ctx.putImageData(imgData, canvas.width, canvas.height);\n        ctx.globalAlpha = 0.5;\n\n    }\n\n\n    // Funzione che \"stampa\" l'immagine nel canvas\n    function display(pixels) {\n        //alert('display'); \n        ln = 0;\n        var i = 0;\n        for (y = 0; y < yres; y++) {\n            for (x = 0; x < xres; x++) {\n                i = (y * xres + x) << 1;\n                pixel16 = (0xffff & pixels[i]) | ((0xffff & pixels[i + 1]) << 8);\n                imgData.data[ln + 0] = ((((pixel16 >> 11) & 0x1F) * 527) + 23) >> 6;\n                imgData.data[ln + 1] = ((((pixel16 >> 5) & 0x3F) * 259) + 33) >> 6;\n                imgData.data[ln + 2] = (((pixel16 & 0x1F) * 527) + 23) >> 6;\n                imgData.data[ln + 3] = (0xFFFFFFFF) & 255;\n                ln += 4;\n            }\n        }\n        \n        ctx.putImageData(imgData, 0, 0);\n    }\n\n    /*function mess_arrived(msg) {\n        // NEW MESSAGE ARRIVED IN \"INPUT\": msg\n        if (first === 0) {\n            console.log(\"first\");\n            init_canvas();\n            first = 1;\n        }\n        \n        // Check if the message is in the chunked format \"[topic] i message\"\n        var chunkFormatMatches = msg.match(/\\[(\\d+)\\]\\s(.*)/);\n        \n        if (chunkFormatMatches && chunkFormatMatches.length === 3) {\n            // Chunked format: \"[topic] i message\"\n            var chunkIndex = parseInt(chunkFormatMatches[1]);\n            var chunkData = hexStringToUint8Array(chunkFormatMatches[2]);\n            \n            receivedChunks[chunkIndex] = chunkData;\n            \n            if (chunkIndex === expectedChunks) {\n                // Display the image when all expected chunks are received\n                var completeImage = new Uint8Array(expectedChunks * chunkData.length);\n                \n                for (var i = 0; i < expectedChunks; i++) { \n                    var chunk=receivedChunks[i]; completeImage.set(chunk, i * chunk.length); \n                }\n                display(completeImage); \n                \n                // Clear receivedChunks for the next image \n                receivedChunks={}; \n                \n                // Increment expectedChunks for the next image \n                expectedChunks=0; \n            }\n        } else { \n            // Non-chunked format: Just bytes to be converted to Uint8Array \n            var rawData=hexStringToUint8Array(msg); \n            display(rawData); \n        } \n    }*/\n\n\n    (function(scope) {\n        scope.$watch('msg.payload', function(msg) { // $watch fires each time the node is triggered in the flow\n        // mess_arrived(msg);\n        // return ;\n        // NUOVO MESSAGGIO ARRIVATO IN \"INPUT\": msg\n        if (first == 0) {\n            console.log(\"first\");\n            init_canvas() ;\n            first = 1;        \n        }\n        \n        pixel = hexStringToUint8Array(msg);\n        display(pixel);\n            \n    });\n\n\n\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "6260282ed6e535a0",
        "type": "function",
        "z": "3215fe15d9aa44e7",
        "name": "function 2",
        "func": "function getCharacterLength(str) {\n  // The string iterator that is used here iterates over characters,\n  // not mere code units\n  return [...str].length;\n}\n\n// msg.payload = \"Dim: \" + getCharacterLength(msg.payload);\n// var timestamp = M\n\nmsg.payload = \"Dim: \" + getCharacterLength(msg.payload) + \" Foto: \" + Math.floor(Date.now() / 1000);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1080,
        "wires": [
            [
                "fb56339fa80b86e8",
                "e65ad8b68ef7a0a6"
            ]
        ]
    },
    {
        "id": "647b42a5c9d25428",
        "type": "inject",
        "z": "3215fe15d9aa44e7",
        "name": "Reset valore label",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 650,
        "y": 1240,
        "wires": [
            [
                "fb56339fa80b86e8"
            ]
        ]
    },
    {
        "id": "26e1c77cd8b28d7e",
        "type": "ui_button",
        "z": "3215fe15d9aa44e7",
        "name": "",
        "group": "86f322ebf8049f50",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Mostra camera",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "my_devices/door/esp_cam/request_send_img",
        "topicType": "str",
        "x": 280,
        "y": 600,
        "wires": [
            [
                "cd3c846e4e60ed19",
                "015b2b69c837041a"
            ]
        ]
    },
    {
        "id": "cd3c846e4e60ed19",
        "type": "link out",
        "z": "3215fe15d9aa44e7",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "4ed927689e34b269",
            "98a6f3a8838eb818",
            "38032b323723dc1c"
        ],
        "x": 485,
        "y": 620,
        "wires": []
    },
    {
        "id": "b83ab328e12a2023",
        "type": "inject",
        "z": "3215fe15d9aa44e7",
        "name": "Mostra camera",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 640,
        "wires": [
            [
                "cd3c846e4e60ed19",
                "015b2b69c837041a"
            ]
        ]
    },
    {
        "id": "75bdbc381194053f",
        "type": "ui_switch",
        "z": "3215fe15d9aa44e7",
        "name": "",
        "label": "Mostra video in streaming",
        "tooltip": "",
        "group": "86f322ebf8049f50",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "a",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 420,
        "y": 740,
        "wires": [
            [
                "e0d015103ada6d2d"
            ]
        ]
    },
    {
        "id": "e0d015103ada6d2d",
        "type": "function",
        "z": "3215fe15d9aa44e7",
        "name": "Video in streaming o foto ",
        "func": "// Se slider on -> richiedo invio foto ogni 500 milllisec\nif (msg.payload == true)    \n    msg.payload = 500;    \nelse \n    msg.payload = -1;    \nmsg.topic = \"my_devices/door/esp_cam/config/freq_send_img\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 740,
        "wires": [
            [
                "3d919d0bb7aff126",
                "eef1a8126377f56c"
            ]
        ]
    },
    {
        "id": "3d919d0bb7aff126",
        "type": "link out",
        "z": "3215fe15d9aa44e7",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "4ed927689e34b269",
            "98a6f3a8838eb818",
            "38032b323723dc1c"
        ],
        "x": 885,
        "y": 740,
        "wires": []
    },
    {
        "id": "da465ff1662b837e",
        "type": "ui_button",
        "z": "3215fe15d9aa44e7",
        "name": "",
        "group": "86f322ebf8049f50",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop camera",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "str",
        "topic": "my_devices/door/esp_cam/request_send_img",
        "topicType": "str",
        "x": 270,
        "y": 540,
        "wires": [
            [
                "cd3c846e4e60ed19",
                "015b2b69c837041a"
            ]
        ]
    },
    {
        "id": "06e959c762079385",
        "type": "mqtt in",
        "z": "3215fe15d9aa44e7",
        "name": "",
        "topic": "my_devices/door/esp_cam/image",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 1000,
        "wires": [
            [
                "13de99df3e54ae05",
                "6260282ed6e535a0"
            ]
        ]
    },
    {
        "id": "9caec3a140c566a0",
        "type": "mqtt out",
        "z": "3215fe15d9aa44e7",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 890,
        "y": 120,
        "wires": []
    },
    {
        "id": "ca29e69e7946295c",
        "type": "mqtt in",
        "z": "3215fe15d9aa44e7",
        "name": "",
        "topic": "my_devices/door/esp_nfc/button",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "95cd540de2b12196",
                "24107174129b8318"
            ]
        ]
    },
    {
        "id": "015b2b69c837041a",
        "type": "mqtt out",
        "z": "3215fe15d9aa44e7",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 530,
        "y": 580,
        "wires": []
    },
    {
        "id": "eef1a8126377f56c",
        "type": "mqtt out",
        "z": "3215fe15d9aa44e7",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 890,
        "y": 700,
        "wires": []
    },
    {
        "id": "24107174129b8318",
        "type": "link out",
        "z": "3215fe15d9aa44e7",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "98a6f3a8838eb818",
            "38032b323723dc1c"
        ],
        "x": 345,
        "y": 240,
        "wires": []
    },
    {
        "id": "c150de1a32582ad1",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "configurazione_esempio",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_nfc/config",
        "payload": "{     \"tag_autorizzati\": [         \"122.48.29.217\",  \"209.53.34.217\"     ],     \"num_tentativi_errati\": [3, 5],      \"check_tag_localmente\": true,     \"deep_sleep\": false }",
        "payloadType": "json",
        "x": 450,
        "y": 280,
        "wires": [
            [
                "ebd45a88251b59c4",
                "5c9f4feacff6b738"
            ]
        ]
    },
    {
        "id": "0ca43bfcba743fdd",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "blocca_tag_bianco",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_nfc/config",
        "payload": "{     \"tag_autorizzati\": [           \"209.53.34.217\"     ]}",
        "payloadType": "json",
        "x": 450,
        "y": 320,
        "wires": [
            [
                "ebd45a88251b59c4",
                "5c9f4feacff6b738"
            ]
        ]
    },
    {
        "id": "ac4c601a4fb17446",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "configurazione errata",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_nfc/config",
        "payload": "aa",
        "payloadType": "str",
        "x": 460,
        "y": 360,
        "wires": [
            [
                "ebd45a88251b59c4",
                "5c9f4feacff6b738"
            ]
        ]
    },
    {
        "id": "781d7b0a7b2c6451",
        "type": "debug",
        "z": "8b4f62e2713401d0",
        "name": "Errore",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 660,
        "wires": []
    },
    {
        "id": "4d10bf33ea0ca03d",
        "type": "function",
        "z": "8b4f62e2713401d0",
        "name": "\"---ERRORE---\" + errore",
        "func": "msg.payload = \"---ERRORE---\\n\" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 660,
        "wires": [
            [
                "781d7b0a7b2c6451",
                "c960aad4ee463057"
            ]
        ]
    },
    {
        "id": "c960aad4ee463057",
        "type": "ui_toast",
        "z": "8b4f62e2713401d0",
        "d": true,
        "position": "top right",
        "displayTime": "5",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Errore",
        "name": "Notifica Errore rilevato",
        "x": 820,
        "y": 600,
        "wires": []
    },
    {
        "id": "530c0152c6781332",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "Blocca lettore NFC",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_nfc/nfc_reader_state",
        "payload": "0",
        "payloadType": "str",
        "x": 430,
        "y": 460,
        "wires": [
            [
                "d5fbf340676057d0",
                "b2446825f2864691"
            ]
        ]
    },
    {
        "id": "ebd45a88251b59c4",
        "type": "link out",
        "z": "8b4f62e2713401d0",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "98a6f3a8838eb818",
            "38032b323723dc1c"
        ],
        "x": 905,
        "y": 240,
        "wires": []
    },
    {
        "id": "d5fbf340676057d0",
        "type": "link out",
        "z": "8b4f62e2713401d0",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "98a6f3a8838eb818",
            "38032b323723dc1c"
        ],
        "x": 635,
        "y": 460,
        "wires": []
    },
    {
        "id": "72429e099cc4b6ca",
        "type": "link in",
        "z": "8b4f62e2713401d0",
        "name": "Errori",
        "links": [
            "1cb179e3ea8dfcbd",
            "fbc653414df87932",
            "bad121c6502fb625"
        ],
        "x": 325,
        "y": 660,
        "wires": [
            [
                "4d10bf33ea0ca03d"
            ]
        ]
    },
    {
        "id": "80d7eff7809011b9",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "d": true,
        "name": "Start mosquitto",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "mosquitto -c \"C:\\Program Files\\mosquitto\\mosquitto.conf\" -v",
        "payloadType": "str",
        "x": 180,
        "y": 820,
        "wires": [
            [
                "6ef69cc929828414"
            ]
        ]
    },
    {
        "id": "b1ecc4a6fb57d96e",
        "type": "debug",
        "z": "8b4f62e2713401d0",
        "d": true,
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 820,
        "wires": []
    },
    {
        "id": "6ef69cc929828414",
        "type": "exec",
        "z": "8b4f62e2713401d0",
        "d": true,
        "command": "",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 450,
        "y": 820,
        "wires": [
            [
                "b1ecc4a6fb57d96e"
            ],
            [
                "b1ecc4a6fb57d96e"
            ],
            [
                "b1ecc4a6fb57d96e"
            ]
        ]
    },
    {
        "id": "9a505f532aea1171",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "Reset Esp camera",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_cam/reset",
        "payload": "1",
        "payloadType": "str",
        "x": 530,
        "y": 1220,
        "wires": [
            [
                "783b1918abc47099",
                "583ac0a11217ea1c"
            ]
        ]
    },
    {
        "id": "783b1918abc47099",
        "type": "link out",
        "z": "8b4f62e2713401d0",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "98a6f3a8838eb818",
            "38032b323723dc1c"
        ],
        "x": 735,
        "y": 1220,
        "wires": []
    },
    {
        "id": "fc9ecdbd01f81756",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "Timeout 20 sec video in streaming",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_cam/config/timeout_send_img",
        "payload": "20",
        "payloadType": "str",
        "x": 580,
        "y": 1060,
        "wires": [
            [
                "f5680f0a1887ac6a",
                "1b9b316c5d3a78b1"
            ]
        ]
    },
    {
        "id": "3b507158a08ca676",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "NO Timeout video in streaming",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_cam/config/timeout_send_img",
        "payload": "-1",
        "payloadType": "str",
        "x": 590,
        "y": 1000,
        "wires": [
            [
                "f5680f0a1887ac6a",
                "1b9b316c5d3a78b1"
            ]
        ]
    },
    {
        "id": "9ea334bd5deb2edc",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "Bluetooth 1",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_nfc/config",
        "payload": "{\"use_bluetooth\":1}",
        "payloadType": "str",
        "x": 650,
        "y": 100,
        "wires": [
            [
                "ebd45a88251b59c4",
                "5c9f4feacff6b738"
            ]
        ]
    },
    {
        "id": "f404f622ba07c175",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "Bluetooth 2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_nfc/config",
        "payload": "{\"use_bluetooth\":2}",
        "payloadType": "str",
        "x": 670,
        "y": 140,
        "wires": [
            [
                "ebd45a88251b59c4",
                "5c9f4feacff6b738"
            ]
        ]
    },
    {
        "id": "30c98635292cdfe6",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "Bluetooth 0",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/door/esp_nfc/config",
        "payload": "{\"use_bluetooth\":0}",
        "payloadType": "str",
        "x": 630,
        "y": 60,
        "wires": [
            [
                "ebd45a88251b59c4",
                "5c9f4feacff6b738"
            ]
        ]
    },
    {
        "id": "58e573d9edf5e40c",
        "type": "comment",
        "z": "8b4f62e2713401d0",
        "name": "CONFIGURAZIONI",
        "info": "",
        "x": 250,
        "y": 200,
        "wires": []
    },
    {
        "id": "56791992ea15a8a2",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "Cambia broker (pc)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/global_config/change_broker",
        "payload": "192.168.43.252",
        "payloadType": "str",
        "x": 300.15875244140625,
        "y": 1361.58740234375,
        "wires": [
            [
                "ff2e5ecdcb78b946",
                "18abb0459b5cfa38"
            ]
        ]
    },
    {
        "id": "0264db7d642624b8",
        "type": "inject",
        "z": "8b4f62e2713401d0",
        "name": "Cambia broker (broker.mqtt.cool)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/global_config/change_broker",
        "payload": "broker.mqtt.cool",
        "payloadType": "str",
        "x": 290,
        "y": 1400,
        "wires": [
            [
                "ff2e5ecdcb78b946",
                "18abb0459b5cfa38"
            ]
        ]
    },
    {
        "id": "ff2e5ecdcb78b946",
        "type": "link out",
        "z": "8b4f62e2713401d0",
        "name": "Manda messaggio retain",
        "mode": "link",
        "links": [
            "22c643a21305c065",
            "98a6f3a8838eb818",
            "38032b323723dc1c"
        ],
        "x": 525,
        "y": 1420,
        "wires": []
    },
    {
        "id": "f5680f0a1887ac6a",
        "type": "link out",
        "z": "8b4f62e2713401d0",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "22c643a21305c065",
            "98a6f3a8838eb818",
            "38032b323723dc1c"
        ],
        "x": 805,
        "y": 1040,
        "wires": []
    },
    {
        "id": "5c9f4feacff6b738",
        "type": "mqtt out",
        "z": "8b4f62e2713401d0",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 950,
        "y": 100,
        "wires": []
    },
    {
        "id": "b2446825f2864691",
        "type": "mqtt out",
        "z": "8b4f62e2713401d0",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 650,
        "y": 500,
        "wires": []
    },
    {
        "id": "bfc37d4e35595b58",
        "type": "mqtt in",
        "z": "8b4f62e2713401d0",
        "name": "",
        "topic": "my_devices/door/esp_nfc/errors",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 620,
        "wires": [
            [
                "4d10bf33ea0ca03d"
            ]
        ]
    },
    {
        "id": "1b9b316c5d3a78b1",
        "type": "mqtt out",
        "z": "8b4f62e2713401d0",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 850,
        "y": 1000,
        "wires": []
    },
    {
        "id": "583ac0a11217ea1c",
        "type": "mqtt out",
        "z": "8b4f62e2713401d0",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 750,
        "y": 1260,
        "wires": []
    },
    {
        "id": "18abb0459b5cfa38",
        "type": "mqtt out",
        "z": "8b4f62e2713401d0",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 550,
        "y": 1360,
        "wires": []
    }
]