[
    {
        "id": "ee78ab54bacf591f",
        "type": "tab",
        "label": "Comunicazione2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "10c2ed820032ad21",
        "type": "tab",
        "label": "NFC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "80b3c9f9fd782f07",
        "type": "tab",
        "label": "Campanello ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d8690a93abfc5ac5",
        "type": "tab",
        "label": "Altro",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3c590ebc25e0b5cc",
        "type": "mqtt-broker",
        "name": "BrokerUsato",
        "broker": "192.168.43.252",
        "port": "1883",
        "clientid": "cam-nodered",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "1882cf541cd0b971",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6778e3a8648143cc",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "86f322ebf8049f50",
        "type": "ui_group",
        "name": "Campanello",
        "tab": "6778e3a8648143cc",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "68b41a4217490954",
        "type": "ui_group",
        "name": "Lettore NFC",
        "tab": "6778e3a8648143cc",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e4e518ab79ad6ee8",
        "type": "ui_group",
        "name": "Stato devices MQTT",
        "tab": "6778e3a8648143cc",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6e6f8688063b3313",
        "type": "ui_group",
        "name": "Stato Device BT",
        "tab": "6778e3a8648143cc",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cd718b65b0c0bc62",
        "type": "ui_group",
        "name": "Connessioni Board",
        "tab": "6778e3a8648143cc",
        "order": 5,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cca069643aceb705",
        "type": "inject",
        "z": "ee78ab54bacf591f",
        "name": "Variabili iniziali",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 120,
        "wires": [
            [
                "4eec3f429a15ce44"
            ]
        ]
    },
    {
        "id": "4eec3f429a15ce44",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Set variabili iniziali",
        "func": "// if (!flow.get(\"old_comunicazione_cam\") == undefined)\n//     return;\n\n\n\nflow.set(\"old_comunicazione_cam\", \"irraggiungibile\");\nflow.set(\"old_comunicazione_nfc\", \"irraggiungibile\");\nflow.set(\"old_comunicazione_nodered\", \"irraggiungibile\");\n\nflow.set(\"comunicazione_cam\",\"irraggiungibile\");\nflow.set(\"comunicazione_nfc\", \"irraggiungibile\");\nflow.set(\"comunicazione_nodered\", \"irraggiungibile\");\n\nif (flow.get(\"state_mqtt_cam\") == \"1\")\n    flow.set(\"comunicazione_cam\",\"mqtt\");\n\n\nif (flow.get(\"state_mqtt_nfc\") == \"1\")\n    flow.set(\"comunicazione_nfc\",\"mqtt\");\n\nflow.set(\"subs_nfc\", [\n    \"my_devices/esp_nfc/config\", \n    \"my_devices/esp_nfc/led\",\n    \"my_devices/esp_nfc/nfc_reader_state\", \n    \"my_devices/global_config/change_broker\"]);\n\n\nflow.set(\"subs_cam\", [\n    \"my_devices/esp_cam/config/freq_send_img\", \n    \"my_devices/esp_cam/deep_sleep\",\n    \"my_devices/esp_cam/config/timeout_send_img\",\n    \"my_devices/esp_nfc/button\",\n    \"my_devices/esp_cam/reset\",\n    \"my_devices/esp_cam/request_send_img\", \n    \"my_devices/global_config/change_broker\"])",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "5c72067a698b46b0",
        "type": "status",
        "z": "ee78ab54bacf591f",
        "name": "Status connessione broker",
        "scope": [
            "a9287275ec931316"
        ],
        "x": 390,
        "y": 260,
        "wires": [
            [
                "58c0522fbe4ef112"
            ]
        ]
    },
    {
        "id": "58c0522fbe4ef112",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Check connessione broker + eventualmente inizia BT",
        "func": "// Status viene chiamato ogni 17 secondi\nvar stato = msg.status.text;\nvar parts = stato.split(\".\");\nvar lastPart = parts[parts.length - 1];\n\nvar old_com = flow.get(\"comunicazione_nodered\");\n\nif (lastPart == \"connected\" ){\n    msg.payload = \"Connesso\";\n\n    // Se nodered riesce a collegarsi al broker mqtt, setto la comuniczione a \"mqtt\"\n    if (old_com == undefined || old_com != \"mqtt\") {\n        flow.set(\"comunicazione_nodered\", \"mqtt\");\n    }\n\n}else {\n    msg.payload = \"Disconnesso\";\n    // Se nodered NON riesce a collegarsi al broker mqtt, setto la comuniczione a \"bt\"\n    if (old_com == undefined || old_com != \"bt\"){\n        flow.set(\"comunicazione_nodered\", \"bt\");\n\n        if (flow.get(\"comunicazione_cam\") !=\"bt_connesso\")\n            flow.set(\"comunicazione_cam\", \"bt\");\n    \n        if (flow.get(\"comunicazione_nfc\") !=\"bt_connesso\")\n            flow.set(\"comunicazione_nfc\", \"bt\");\n    \n    }\n\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a9287275ec931316",
        "type": "mqtt in",
        "z": "ee78ab54bacf591f",
        "name": "",
        "topic": "my_devices/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "449856b9f5cef0fa",
        "type": "ui_text",
        "z": "ee78ab54bacf591f",
        "group": "cd718b65b0c0bc62",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Comunicazione con CAM:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1650,
        "y": 600,
        "wires": []
    },
    {
        "id": "8d98989b8677dea0",
        "type": "inject",
        "z": "ee78ab54bacf591f",
        "name": "Aggiorna connessioni boards",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 640,
        "wires": [
            [
                "18a9c679f3b668b1"
            ]
        ]
    },
    {
        "id": "18a9c679f3b668b1",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Check CAM stato cambiato + upate dashboard",
        "func": "\n\nmsg.payload = flow.get(\"comunicazione_cam\");\nvar old = flow.get(\"old_comunicazione_cam\");\nif (msg.payload != old){\n    // Comunicazione cam e' stata cambiata\n    // TODO\n\n    /*\n    \n    Possibili stati: irraggiungibile, mqtt, bt\n\n    ------  QUANDO PASSO DA UNO STATO A UN ALTRO? --------\n        Passo a irraggiungibile:\n            -> all'inizio di node-red\n            -> se lo script python e' terminato ed ero nello stato bt\n        Passo a mqtt:\n            -> se da mqtt state arriva 1\n        Passo a bt:\n            -> se da mqtt state arriva 0 e stavo comunicando con mqtt o ero irraggiungibile\n            -> se lo script python stampa \"Connesso\"\n    \n\n    ------- COSA SUCCEDE SE SI PASSA DA UNO STATO A UN ALTRO? --------\n        Se passo da irraggiungibile a mqtt -> nulla */\n\n   \n    //  Se passo da irraggiungibile a bt -> nulla\n    if(old == \"irraggiungibile\" && msg.payload == \"bt\"){\n        msg.da_fare = \"start_sript_bt\";\n    }\n        \n    // Se passo da mqtt a irraggiungibile -> passo a bt -> start script\n    if (old == \"mqtt\" && msg.payload == \"irraggiungibile\"){\n        node.log(\"2\");\n        msg.da_fare = \"start_sript_bt\";\n        // flow.set(\"comunicazione_cam\", \"bt\");\n    }\n    \n    // Se passo da mqtt a bt -> start script \n    if (old == \"mqtt\" && msg.payload == \"bt\") {\n        node.log(\"3\");\n        msg.da_fare = \"start_sript_bt\";\n        // flow.set(\"comunicazione_cam\", \"bt\");\n    }\n\n\n    //    Se passo da bt a irraggiungibile -> la riconnessione verra' riprovata dopo al max 10 sec\n    // if (old == \"bt\" && msg.payload == \"irraggiungibile\"){\n        // node.log(\"6\");\n        // flow.set(\"comunicazione_cam\", \"provo_bt\");\n    // }\n\n    // Se passo da bt a mqtt -> killo script\n    if (old == \"bt\" && msg.payload == \"mqtt\"){\n        node.log(\"7\");\n        msg.da_fare = \"kill_sript_bt\";\n    }\n    \n    \n    \n    flow.set(\"old_comunicazione_cam\", msg.payload);\n}   \n\nif (msg.payload != \"mqtt\" && msg.payload != \"bt_connesso\") \n    msg.payload = \"irraggiungibile\";\n    \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 640,
        "wires": [
            [
                "6dabec24d41a28fc",
                "eec8183094b3b53a"
            ]
        ]
    },
    {
        "id": "7437fcf66dad0966",
        "type": "mqtt in",
        "z": "ee78ab54bacf591f",
        "name": "",
        "topic": "my_devices/esp_cam/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 330,
        "y": 560,
        "wires": [
            [
                "58f02525e58e8fbf"
            ]
        ]
    },
    {
        "id": "58f02525e58e8fbf",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Passa a \"mqtt\" o \"bt\"",
        "func": "flow.set(\"state_mqtt_cam\", msg.payload);\n\nif (msg.payload == \"1\")\n    flow.set(\"comunicazione_cam\", \"mqtt\");\nelse if (flow.get(\"comunicazione_cam\") != \"bt\") \n    // Se board si scollega da mqtt e non sto comunicando con bt, ritento la comunicazione bt\n    flow.set(\"comunicazione_cam\", \"bt\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "1b83789850aaf933",
        "type": "daemon",
        "z": "ee78ab54bacf591f",
        "name": "Bluetooth CAM",
        "command": "python.exe",
        "args": "..\\bluetooth_pc\\bt_connect_multithread.py",
        "autorun": false,
        "cr": true,
        "redo": false,
        "op": "string",
        "closer": "SIGKILL",
        "x": 1320,
        "y": 780,
        "wires": [
            [
                "118edf731ed51ed9"
            ],
            [],
            [
                "f6e5336212b69722"
            ]
        ]
    },
    {
        "id": "f6e5336212b69722",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Forse board irraggiungibile",
        "func": "if (flow.get(\"comunicazione_cam\") == \"bt\" || flow.get(\"comunicazione_cam\") == \"bt_connesso\")\n    flow.set(\"comunicazione_cam\",\"irraggiungibile\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "118edf731ed51ed9",
        "type": "switch",
        "z": "ee78ab54bacf591f",
        "name": "Check \"connesso\" o output",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Connesso",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 760,
        "wires": [
            [
                "61039d4805acf31a"
            ],
            [
                "26133ab70e08262d"
            ]
        ]
    },
    {
        "id": "61039d4805acf31a",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Segnalo la connessione bt",
        "func": "flow.set(\"comunicazione_cam\", \"bt_connesso\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "6dabec24d41a28fc",
        "type": "switch",
        "z": "ee78ab54bacf591f",
        "name": "",
        "property": "da_fare",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "start_sript_bt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "kill_sript_bt",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 780,
        "wires": [
            [
                "821ec63c6a4be961"
            ],
            [
                "750a34e9c63f9d82"
            ]
        ]
    },
    {
        "id": "821ec63c6a4be961",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Start BT cam",
        "func": "msg.args = \"--cam\";\nmsg.start = true;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 780,
        "wires": [
            [
                "1b83789850aaf933"
            ]
        ]
    },
    {
        "id": "750a34e9c63f9d82",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Kill process",
        "func": "msg.kill = true; \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 840,
        "wires": [
            [
                "1b83789850aaf933"
            ]
        ]
    },
    {
        "id": "31444a81f058df67",
        "type": "inject",
        "z": "ee78ab54bacf591f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 840,
        "wires": [
            [
                "750a34e9c63f9d82"
            ]
        ]
    },
    {
        "id": "26133ab70e08262d",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "New BT message ",
        "func": "// Separo topic e payload\nvar mess_arr = msg.payload;\nlet matchResult = mess_arr.match(/\\[(.*?)\\]\\s*(.*)/);\nif (!matchResult)\n    return null; \n\nlet topic = matchResult[1];\nmsg.topic = topic;\n\nlet payload = matchResult[2];\nmsg.payload = payload;\n\nnode.log(\"topic\" + topic);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 780,
        "wires": [
            [
                "0fc7519886d9deeb"
            ]
        ]
    },
    {
        "id": "0fc7519886d9deeb",
        "type": "switch",
        "z": "ee78ab54bacf591f",
        "name": "Subscriptions node-red",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "my_devices/esp_cam/image",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2130,
        "y": 760,
        "wires": [
            [
                "bc6e52ddc2902daf"
            ]
        ]
    },
    {
        "id": "bc6e52ddc2902daf",
        "type": "link out",
        "z": "ee78ab54bacf591f",
        "name": "Immagine",
        "mode": "link",
        "links": [
            "4a257bc61604bfa5"
        ],
        "x": 2345,
        "y": 760,
        "wires": []
    },
    {
        "id": "c86c257cbe62bc6b",
        "type": "link out",
        "z": "ee78ab54bacf591f",
        "name": "Tag strisciato",
        "mode": "link",
        "links": [
            "0ecbf153365f1bc6",
            "011b740ed152c80d"
        ],
        "x": 2315,
        "y": 1580,
        "wires": []
    },
    {
        "id": "4cb59f6b1499e8a9",
        "type": "link out",
        "z": "ee78ab54bacf591f",
        "name": "Campanello suonato",
        "mode": "link",
        "links": [
            "1f4a4471643a8872"
        ],
        "x": 2805,
        "y": 1700,
        "wires": []
    },
    {
        "id": "623ec1f94d0dec83",
        "type": "link out",
        "z": "ee78ab54bacf591f",
        "name": "Intruso",
        "mode": "link",
        "links": [
            "712a8608c2dd70e5"
        ],
        "x": 2585,
        "y": 1740,
        "wires": []
    },
    {
        "id": "e86972b1496c3d2d",
        "type": "link out",
        "z": "ee78ab54bacf591f",
        "name": "Errori",
        "mode": "link",
        "links": [
            "640fb249a2ac9f43"
        ],
        "x": 2285,
        "y": 1800,
        "wires": []
    },
    {
        "id": "7db0adf538b82572",
        "type": "comment",
        "z": "ee78ab54bacf591f",
        "name": "",
        "info": "Se l'immagine e' arrivata con il BT, non la pubblico su mqtt da node red perche' tanto l'altra board non è sottoscritta al topic in cui pubblico l'immagine.\nSe avessi un device sottoscritto a tale topic, avrei dovuto pubblicarla",
        "x": 2440,
        "y": 760,
        "wires": []
    },
    {
        "id": "a4d27caacb5544ab",
        "type": "link in",
        "z": "ee78ab54bacf591f",
        "name": "Manda messaggio camera",
        "links": [
            "3b0680717c24a4bf",
            "fcdc2be1e2dd61db",
            "fbf141a22640ee0b",
            "d3ad3650759fe657",
            "7db7f82f4ab1c8da",
            "610dc1834dcbe680",
            "32dfe625d8c39119",
            "c21372e7f6a8306d",
            "4ca01916e6d7c63c",
            "cba014845e20c3cb",
            "03f5049ad4774689",
            "c6cb8125e17f074f",
            "83c096d061e4e0d1"
        ],
        "x": 945,
        "y": 940,
        "wires": [
            [
                "d3289b6f0f94393e"
            ]
        ]
    },
    {
        "id": "d3289b6f0f94393e",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Manda input CAM",
        "func": "// Se la cam e' attualmente connessa col BT e il messaggio da mandare e' nella lista delle \n// sottoscrizioni della cam, allora gli mando il messaggio \nif (flow.get(\"comunicazione_cam\") != \"mqtt\") {\n    var topicList = flow.get(\"subs_cam\");\n    if (topicList.includes(msg.topic)){\n        msg.payload = \"[\" + msg.topic + \"] \" + msg.payload; \n        return msg;\n    }\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 940,
        "wires": [
            [
                "1b83789850aaf933"
            ]
        ]
    },
    {
        "id": "3bfeff89159223ef",
        "type": "inject",
        "z": "ee78ab54bacf591f",
        "name": "Se board irraggiungibile -> riprova con BT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 330,
        "y": 980,
        "wires": [
            [
                "a6bdc3dacfd23047"
            ]
        ]
    },
    {
        "id": "a6bdc3dacfd23047",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "function 5",
        "func": "if (flow.get(\"comunicazione_cam\") == \"irraggiungibile\")\n    flow.set(\"comunicazione_cam\", \"bt\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "88f94f9e4ca32977",
        "type": "comment",
        "z": "ee78ab54bacf591f",
        "name": "CAM",
        "info": "",
        "x": 270,
        "y": 480,
        "wires": []
    },
    {
        "id": "9227c96c7a0c5a98",
        "type": "ui_text",
        "z": "ee78ab54bacf591f",
        "group": "cd718b65b0c0bc62",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Comunicazione con NFC:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1490,
        "y": 1460,
        "wires": []
    },
    {
        "id": "b9c9cca29f7cde7a",
        "type": "inject",
        "z": "ee78ab54bacf591f",
        "name": "Aggiorna connessioni boards",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 1480,
        "wires": [
            [
                "cb634f11c76cfeff"
            ]
        ]
    },
    {
        "id": "cb634f11c76cfeff",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Check NFCstato cambiato + upate dashboard",
        "func": "\n\nmsg.payload = flow.get(\"comunicazione_nfc\");\nvar old = flow.get(\"old_comunicazione_nfc\");\nif (msg.payload != old){\n    // Comunicazione nfc e' stata cambiata\n    // TODO\n\n    /*\n    \n    Possibili stati: irraggiungibile, mqtt, bt\n\n    ------  QUANDO PASSO DA UNO STATO A UN ALTRO? --------\n        Passo a irraggiungibile:\n            -> all'inizio di node-red\n            -> se lo script python e' terminato ed ero nello stato bt\n        Passo a mqtt:\n            -> se da mqtt state arriva 1\n        Passo a bt:\n            -> se da mqtt state arriva 0 e stavo comunicando con mqtt o ero irraggiungibile\n            -> se lo script python stampa \"Connesso\"\n    \n\n    ------- COSA SUCCEDE SE SI PASSA DA UNO STATO A UN ALTRO? --------\n        Se passo da irraggiungibile a mqtt -> nulla */\n\n   \n    //  Se passo da irraggiungibile a bt -> nulla\n    if(old == \"irraggiungibile\" && msg.payload == \"bt\"){\n        msg.da_fare = \"start_sript_bt\";\n    }\n        \n    // Se passo da mqtt a irraggiungibile -> passo a bt -> start script\n    if (old == \"mqtt\" && msg.payload == \"irraggiungibile\"){\n        node.log(\"2\");\n        msg.da_fare = \"start_sript_bt\";\n        // flow.set(\"comunicazione_nfc\", \"bt\");\n    }\n    \n    // Se passo da mqtt a bt -> start script \n    if (old == \"mqtt\" && msg.payload == \"bt\") {\n        node.log(\"3\");\n        msg.da_fare = \"start_sript_bt\";\n        // flow.set(\"comunicazione_nfc\", \"bt\");\n    }\n\n\n    //    Se passo da bt a irraggiungibile -> la riconnessione verra' riprovata dopo al max 10 sec\n    // if (old == \"bt\" && msg.payload == \"irraggiungibile\"){\n        // node.log(\"6\");\n        // flow.set(\"comunicazione_nfc\", \"provo_bt\");\n    // }\n\n    // Se passo da bt a mqtt -> killo script\n    if (old == \"bt\" && msg.payload == \"mqtt\"){\n        node.log(\"7\");\n        msg.da_fare = \"kill_sript_bt\";\n    }\n    \n    \n    \n    flow.set(\"old_comunicazione_nfc\", msg.payload);\n}   \n\n\n// Scritta sulla dashboard\nif (msg.payload != \"mqtt\" && msg.payload != \"bt_connesso\") \n    msg.payload = \"irraggiungibile\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1480,
        "wires": [
            [
                "6d61e79a52eae1e4",
                "8cdb9dd439fc9c1e"
            ]
        ]
    },
    {
        "id": "f3e0849a6d1e793a",
        "type": "mqtt in",
        "z": "ee78ab54bacf591f",
        "name": "",
        "topic": "my_devices/esp_nfc/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 1400,
        "wires": [
            [
                "62df3fcaadbe7754"
            ]
        ]
    },
    {
        "id": "62df3fcaadbe7754",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Passa a \"mqtt\" o \"bt\"",
        "func": "flow.set(\"state_mqtt_nfc\", msg.payload);\n\nif (msg.payload == \"1\")\n    flow.set(\"comunicazione_nfc\", \"mqtt\");\nelse if (flow.get(\"comunicazione_nfc\") != \"bt\") \n    // Se board si scollega da mqtt e non sto comunicando con bt, ritento la comunicazione bt\n    flow.set(\"comunicazione_nfc\", \"bt\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "1f23f2f1273766c0",
        "type": "daemon",
        "z": "ee78ab54bacf591f",
        "name": "Bluetooth NFC",
        "command": "python.exe",
        "args": "..\\bluetooth_pc\\bt_connect_multithread.py",
        "autorun": false,
        "cr": true,
        "redo": false,
        "op": "string",
        "closer": "SIGKILL",
        "x": 1280,
        "y": 1620,
        "wires": [
            [
                "90244ba779fbb15c",
                "ee09c083f881bd4c"
            ],
            [],
            [
                "b3dd5f6a30927cf2"
            ]
        ]
    },
    {
        "id": "b3dd5f6a30927cf2",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Forse board irraggiungibile",
        "func": "if (flow.get(\"comunicazione_nfc\") == \"bt\" || flow.get(\"comunicazione_nfc\") == \"bt_connesso\")\n    flow.set(\"comunicazione_nfc\",\"irraggiungibile\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1640,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "90244ba779fbb15c",
        "type": "switch",
        "z": "ee78ab54bacf591f",
        "name": "Check \"connesso\" o output",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Connesso",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1540,
        "y": 1600,
        "wires": [
            [
                "017d75e264ed52ea"
            ],
            [
                "fb0c6cc6543af784"
            ]
        ]
    },
    {
        "id": "017d75e264ed52ea",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Segnalo la connessione bt",
        "func": "node.log(\"com_nfc:\" + flow.get(\"comunicazione_nfc\"));\nif (flow.get(\"comunicazione_nfc\") != \"mqtt\")\n    flow.set(\"comunicazione_nfc\", \"bt_connesso\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "6d61e79a52eae1e4",
        "type": "switch",
        "z": "ee78ab54bacf591f",
        "name": "",
        "property": "da_fare",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "start_sript_bt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "kill_sript_bt",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 1620,
        "wires": [
            [
                "908ca269dacbce71"
            ],
            [
                "16c903dc8d44589c"
            ]
        ]
    },
    {
        "id": "908ca269dacbce71",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Start BT nfc",
        "func": "msg.args = \"--nfc\";\nmsg.start = true;\nmsg.payload = \"\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1620,
        "wires": [
            [
                "1f23f2f1273766c0"
            ]
        ]
    },
    {
        "id": "16c903dc8d44589c",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Kill process",
        "func": "msg.kill = true; \nmsg.payload = \"\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1680,
        "wires": [
            [
                "1f23f2f1273766c0"
            ]
        ]
    },
    {
        "id": "d79e5270c6f72ef9",
        "type": "inject",
        "z": "ee78ab54bacf591f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 840,
        "y": 1680,
        "wires": [
            [
                "16c903dc8d44589c"
            ]
        ]
    },
    {
        "id": "fb0c6cc6543af784",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "New BT message ",
        "func": "// Separo topic e payload\nvar mess_arr = msg.payload;\nlet matchResult = mess_arr.match(/\\[(.*?)\\]\\s*(.*)/);\nif (!matchResult)\n    return null; \n\nlet topic = matchResult[1];\nmsg.topic = topic;\n\nlet payload = matchResult[2];\nmsg.payload = payload;\n\nnode.log(\"topic\" + topic);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 1620,
        "wires": [
            [
                "123dfdd66055caf0"
            ]
        ]
    },
    {
        "id": "c104e1235f7eeef1",
        "type": "comment",
        "z": "ee78ab54bacf591f",
        "name": "",
        "info": "Se l'immagine e' arrivata con il BT, non la pubblico su mqtt da node red perche' tanto l'altra board non è sottoscritta al topic in cui pubblico l'immagine.\nSe avessi un device sottoscritto a tale topic, avrei dovuto pubblicarla",
        "x": 2660,
        "y": 1540,
        "wires": []
    },
    {
        "id": "70a396011a96ea0a",
        "type": "link in",
        "z": "ee78ab54bacf591f",
        "name": "Manda messaggio",
        "links": [
            "3b0680717c24a4bf",
            "fcdc2be1e2dd61db",
            "fbf141a22640ee0b",
            "5ef1166da07a6229",
            "d3ad3650759fe657",
            "7db7f82f4ab1c8da",
            "610dc1834dcbe680",
            "32dfe625d8c39119",
            "c21372e7f6a8306d",
            "4ca01916e6d7c63c",
            "cba014845e20c3cb",
            "03f5049ad4774689",
            "3eadd95b90ef02be"
        ],
        "x": 905,
        "y": 1780,
        "wires": [
            [
                "938f1ddfb79a1149"
            ]
        ]
    },
    {
        "id": "938f1ddfb79a1149",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Manda input NFC",
        "func": "// Se la nfc e' attualmente connessa col BT e il messaggio da mandare e' nella lista delle \n// sottoscrizioni della nfc, allora gli mando il messaggio \nif (flow.get(\"comunicazione_nfc\") != \"mqtt\") {\n    var topicList = flow.get(\"subs_nfc\");\n    if (topicList.includes(msg.topic)){\n        msg.payload = \"[\" + msg.topic + \"] \" + msg.payload; \n        return msg;\n    }\n}\n\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 1780,
        "wires": [
            [
                "1f23f2f1273766c0"
            ]
        ]
    },
    {
        "id": "15f421cefba029a0",
        "type": "inject",
        "z": "ee78ab54bacf591f",
        "name": "Se board irraggiungibile -> riprova con BT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "20",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 1700,
        "wires": [
            [
                "96ea37a0f8c95ef5"
            ]
        ]
    },
    {
        "id": "96ea37a0f8c95ef5",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "function 6",
        "func": "if (flow.get(\"comunicazione_nfc\") == \"irraggiungibile\")\n    flow.set(\"comunicazione_nfc\", \"bt\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "0bd89f0d26eab42a",
        "type": "comment",
        "z": "ee78ab54bacf591f",
        "name": "NFC",
        "info": "",
        "x": 170,
        "y": 1340,
        "wires": []
    },
    {
        "id": "123dfdd66055caf0",
        "type": "switch",
        "z": "ee78ab54bacf591f",
        "name": "Subscriptions node-red",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "my_devices/esp_nfc/tag_swiped",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/esp_nfc/button",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/esp_nfc/intruder",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/esp_nfc/errors",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "my_devices/esp_nfc/nfc_attempts",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 2090,
        "y": 1640,
        "wires": [
            [
                "c86c257cbe62bc6b"
            ],
            [
                "89bae92c17d9e33f",
                "b6105998429c5fa7"
            ],
            [
                "89bae92c17d9e33f",
                "ccff0ed952a9f42f"
            ],
            [
                "e86972b1496c3d2d"
            ],
            [
                "3aa66f8c9898b328"
            ]
        ]
    },
    {
        "id": "89bae92c17d9e33f",
        "type": "mqtt out",
        "z": "ee78ab54bacf591f",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 2470,
        "y": 1620,
        "wires": []
    },
    {
        "id": "3aa66f8c9898b328",
        "type": "link out",
        "z": "ee78ab54bacf591f",
        "name": "Stato lettore NFC",
        "mode": "link",
        "links": [
            "8e745430f78e348e"
        ],
        "x": 2225,
        "y": 1880,
        "wires": []
    },
    {
        "id": "b6105998429c5fa7",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Campanello suonato",
        "func": "if (flow.get(\"comunicazione_nodered\")!=\"mqtt\")\n    return msg;\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2620,
        "y": 1680,
        "wires": [
            [
                "4cb59f6b1499e8a9",
                "c6cb8125e17f074f"
            ]
        ]
    },
    {
        "id": "ccff0ed952a9f42f",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "Intruso rilevato",
        "func": "if (flow.get(\"comunicazione_nodered\")!=\"mqtt\")\n    return msg;\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 1740,
        "wires": [
            [
                "623ec1f94d0dec83",
                "83c096d061e4e0d1"
            ]
        ]
    },
    {
        "id": "c6cb8125e17f074f",
        "type": "link out",
        "z": "ee78ab54bacf591f",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "a4d27caacb5544ab"
        ],
        "x": 2765,
        "y": 1640,
        "wires": []
    },
    {
        "id": "83c096d061e4e0d1",
        "type": "link out",
        "z": "ee78ab54bacf591f",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "a4d27caacb5544ab"
        ],
        "x": 2525,
        "y": 1780,
        "wires": []
    },
    {
        "id": "ee09c083f881bd4c",
        "type": "debug",
        "z": "ee78ab54bacf591f",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 1540,
        "wires": []
    },
    {
        "id": "eec8183094b3b53a",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "function 8",
        "func": "if (msg.payload == \"bt_connesso\")\n    msg.payload = \"connesso BT\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 620,
        "wires": [
            [
                "449856b9f5cef0fa"
            ]
        ]
    },
    {
        "id": "8cdb9dd439fc9c1e",
        "type": "function",
        "z": "ee78ab54bacf591f",
        "name": "function 9",
        "func": "if (msg.payload == \"bt_connesso\")\n    msg.payload = \"connesso BT\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1480,
        "wires": [
            [
                "9227c96c7a0c5a98"
            ]
        ]
    },
    {
        "id": "16bc4102d84b42e5",
        "type": "function",
        "z": "10c2ed820032ad21",
        "name": "\"Intruso:\" + tag",
        "func": "msg.payload = \"Intruso rilevato: \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "c068696d732b9122",
        "type": "function",
        "z": "10c2ed820032ad21",
        "name": "\"Tag letto: \" + tag",
        "func": "msg.payload = \"Tag letto: \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 80,
        "wires": [
            [
                "fa4483f3e8a50f50"
            ]
        ]
    },
    {
        "id": "fa4483f3e8a50f50",
        "type": "debug",
        "z": "10c2ed820032ad21",
        "name": "Tag letto",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 80,
        "wires": []
    },
    {
        "id": "017aa8b83f38cba9",
        "type": "ui_toast",
        "z": "10c2ed820032ad21",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Tag strisciato: ",
        "name": "Notifica tag strisciato",
        "x": 660,
        "y": 160,
        "wires": []
    },
    {
        "id": "64f91c1cb58321bd",
        "type": "ui_toast",
        "z": "10c2ed820032ad21",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Intruso rilevato",
        "name": "Intruso rilevato",
        "x": 780,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "0ecbf153365f1bc6",
        "type": "link in",
        "z": "10c2ed820032ad21",
        "name": "Tag strisciato",
        "links": [
            "cb0e70cb334fcc37",
            "f9322d9408f57b46",
            "c86c257cbe62bc6b"
        ],
        "x": 385,
        "y": 140,
        "wires": [
            [
                "c068696d732b9122",
                "017aa8b83f38cba9"
            ]
        ]
    },
    {
        "id": "712a8608c2dd70e5",
        "type": "link in",
        "z": "10c2ed820032ad21",
        "name": "Intruso",
        "links": [
            "5d90bde9e6309a4e",
            "7c7f5fdd0557d647",
            "623ec1f94d0dec83"
        ],
        "x": 555,
        "y": 420,
        "wires": [
            [
                "64f91c1cb58321bd",
                "16bc4102d84b42e5"
            ]
        ]
    },
    {
        "id": "a44771adf0545064",
        "type": "mqtt in",
        "z": "10c2ed820032ad21",
        "name": "",
        "topic": "my_devices/esp_nfc/tag_swiped",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "c068696d732b9122",
                "017aa8b83f38cba9"
            ]
        ]
    },
    {
        "id": "ecaf7ed4a9ddf37e",
        "type": "mqtt in",
        "z": "10c2ed820032ad21",
        "name": "",
        "topic": "my_devices/esp_nfc/intruder",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 450,
        "y": 520,
        "wires": [
            [
                "64f91c1cb58321bd",
                "16bc4102d84b42e5",
                "fcdc2be1e2dd61db"
            ]
        ]
    },
    {
        "id": "fcdc2be1e2dd61db",
        "type": "link out",
        "z": "10c2ed820032ad21",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "a4d27caacb5544ab",
            "70a396011a96ea0a"
        ],
        "x": 665,
        "y": 620,
        "wires": []
    },
    {
        "id": "fcfe85afd181d452",
        "type": "ui_button",
        "z": "10c2ed820032ad21",
        "name": "",
        "group": "68b41a4217490954",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Chiedi stato  Lettore NFC",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "2",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 390,
        "y": 800,
        "wires": [
            [
                "5f69d4f12ef2c0ff"
            ]
        ]
    },
    {
        "id": "4a983f0c866e2113",
        "type": "ui_button",
        "z": "10c2ed820032ad21",
        "name": "",
        "group": "68b41a4217490954",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Sblocca Lettore NFC",
        "tooltip": "",
        "color": "black",
        "bgcolor": "lightgreen",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 400,
        "y": 840,
        "wires": [
            [
                "5f69d4f12ef2c0ff"
            ]
        ]
    },
    {
        "id": "bdb11d313c26ec3b",
        "type": "ui_button",
        "z": "10c2ed820032ad21",
        "name": "",
        "group": "68b41a4217490954",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Blocca Lettore NFC",
        "tooltip": "",
        "color": "black",
        "bgcolor": "salmon",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 410,
        "y": 880,
        "wires": [
            [
                "5f69d4f12ef2c0ff"
            ]
        ]
    },
    {
        "id": "1ed393602818073f",
        "type": "ui_text",
        "z": "10c2ed820032ad21",
        "group": "68b41a4217490954",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1350,
        "y": 1100,
        "wires": []
    },
    {
        "id": "2b993dd724c7dbb8",
        "type": "mqtt out",
        "z": "10c2ed820032ad21",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 830,
        "y": 820,
        "wires": []
    },
    {
        "id": "5ef1166da07a6229",
        "type": "link out",
        "z": "10c2ed820032ad21",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "70a396011a96ea0a"
        ],
        "x": 825,
        "y": 900,
        "wires": []
    },
    {
        "id": "8e745430f78e348e",
        "type": "link in",
        "z": "10c2ed820032ad21",
        "name": "Stato lettore NFC",
        "links": [
            "3aa66f8c9898b328"
        ],
        "x": 485,
        "y": 1160,
        "wires": [
            [
                "2ec8840fbb61b4cb"
            ]
        ]
    },
    {
        "id": "6d7bec4686e36f18",
        "type": "mqtt in",
        "z": "10c2ed820032ad21",
        "name": "",
        "topic": "my_devices/esp_nfc/nfc_attempts",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 1100,
        "wires": [
            [
                "2ec8840fbb61b4cb"
            ]
        ]
    },
    {
        "id": "2ec8840fbb61b4cb",
        "type": "function",
        "z": "10c2ed820032ad21",
        "name": "Stampa stato lettore NFC",
        "func": "let resultArray = msg.payload.split(\" \");\nif (resultArray[0] == \"0\")\n    msg.payload = \"Abilitato\";\nelse if (resultArray[0] == \"1\")\n    msg.payload = \"Bloccato\";\nelse \n    msg.payload = \"Sconosciuto\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1100,
        "wires": [
            [
                "1ed393602818073f",
                "81667a7e1b9d313b"
            ]
        ]
    },
    {
        "id": "81667a7e1b9d313b",
        "type": "delay",
        "z": "10c2ed820032ad21",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 940,
        "y": 1180,
        "wires": [
            [
                "81c6d5e616eb96b0"
            ]
        ]
    },
    {
        "id": "81c6d5e616eb96b0",
        "type": "change",
        "z": "10c2ed820032ad21",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": " ",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 1180,
        "wires": [
            [
                "1ed393602818073f"
            ]
        ]
    },
    {
        "id": "5f69d4f12ef2c0ff",
        "type": "change",
        "z": "10c2ed820032ad21",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "my_devices/esp_nfc/nfc_reader_state",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 840,
        "wires": [
            [
                "2b993dd724c7dbb8",
                "5ef1166da07a6229"
            ]
        ]
    },
    {
        "id": "8b6a381eb2c4650f",
        "type": "inject",
        "z": "10c2ed820032ad21",
        "name": "configurazione_esempio (bianco e nero auth)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_nfc/config",
        "payload": "{     \"tag_autorizzati\": [   \"122.48.29.217\",     \"209.53.34.217\"     ],     \"num_tentativi_errati\": [3, 5],      \"check_tag_localmente\": true,     \"secondi_board_inattiva\": 60 }",
        "payloadType": "str",
        "x": 550,
        "y": 2180,
        "wires": [
            [
                "4ca01916e6d7c63c",
                "2fe23df3dfb4e0c6"
            ]
        ]
    },
    {
        "id": "ef359ba831e51de5",
        "type": "inject",
        "z": "10c2ed820032ad21",
        "name": "blocca_tag_bianco",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_nfc/config",
        "payload": "{     \"tag_autorizzati\": [    \"209.53.34.217\"     ],     \"num_tentativi_errati\": [3, 5],      \"check_tag_localmente\": true,     \"secondi_board_inattiva\": 60 }",
        "payloadType": "json",
        "x": 470,
        "y": 2220,
        "wires": [
            [
                "4ca01916e6d7c63c",
                "2fe23df3dfb4e0c6"
            ]
        ]
    },
    {
        "id": "e9cbd8eda5489b1d",
        "type": "inject",
        "z": "10c2ed820032ad21",
        "name": "configurazione errata",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_nfc/config",
        "payload": "aa",
        "payloadType": "str",
        "x": 500,
        "y": 2260,
        "wires": [
            [
                "4ca01916e6d7c63c",
                "2fe23df3dfb4e0c6"
            ]
        ]
    },
    {
        "id": "4ca01916e6d7c63c",
        "type": "link out",
        "z": "10c2ed820032ad21",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "a4d27caacb5544ab",
            "70a396011a96ea0a"
        ],
        "x": 1345,
        "y": 2060,
        "wires": []
    },
    {
        "id": "e58ef64e00a7bd1a",
        "type": "inject",
        "z": "10c2ed820032ad21",
        "name": "Bluetooth",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_nfc/config",
        "payload": "{\"use_bluetooth\":1}",
        "payloadType": "str",
        "x": 360,
        "y": 1820,
        "wires": [
            [
                "4ca01916e6d7c63c",
                "2fe23df3dfb4e0c6"
            ]
        ]
    },
    {
        "id": "2fe23df3dfb4e0c6",
        "type": "mqtt out",
        "z": "10c2ed820032ad21",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 1330,
        "y": 1800,
        "wires": []
    },
    {
        "id": "f5d37969540dc4c1",
        "type": "inject",
        "z": "10c2ed820032ad21",
        "name": "Disattiva deep sleep",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_nfc/config",
        "payload": "{   \"secondi_board_inattiva\": 60 }",
        "payloadType": "str",
        "x": 370,
        "y": 2020,
        "wires": [
            [
                "2fe23df3dfb4e0c6",
                "4ca01916e6d7c63c"
            ]
        ]
    },
    {
        "id": "5be9348bfc5e5914",
        "type": "inject",
        "z": "10c2ed820032ad21",
        "name": "Togli configurazione retain",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_nfc/config",
        "payload": "{}",
        "payloadType": "str",
        "x": 750,
        "y": 1740,
        "wires": [
            [
                "2fe23df3dfb4e0c6",
                "4ca01916e6d7c63c"
            ]
        ]
    },
    {
        "id": "5b84988cc8626c26",
        "type": "inject",
        "z": "10c2ed820032ad21",
        "name": "Check tag su node red",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_nfc/config",
        "payload": "{\"check_tag_localmente\":false}",
        "payloadType": "str",
        "x": 340,
        "y": 1940,
        "wires": [
            [
                "2fe23df3dfb4e0c6",
                "4ca01916e6d7c63c"
            ]
        ]
    },
    {
        "id": "17b148471fcf5361",
        "type": "mqtt in",
        "z": "10c2ed820032ad21",
        "name": "",
        "topic": "my_devices/esp_nfc/tag_swiped",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 470,
        "y": 1400,
        "wires": [
            [
                "c8b92ab136bd1ab2"
            ]
        ]
    },
    {
        "id": "011b740ed152c80d",
        "type": "link in",
        "z": "10c2ed820032ad21",
        "name": "Tag strisciato",
        "links": [
            "cb0e70cb334fcc37",
            "f9322d9408f57b46",
            "c86c257cbe62bc6b"
        ],
        "x": 585,
        "y": 1460,
        "wires": [
            [
                "c8b92ab136bd1ab2"
            ]
        ]
    },
    {
        "id": "c8b92ab136bd1ab2",
        "type": "function",
        "z": "10c2ed820032ad21",
        "name": "Logica tag swiped -  apri porta",
        "func": "// Messaggio non controllato dal device, lo controllo su node red\nvar mess = msg.payload;\nif (mess.includes(\"Non controllato\")){ \n    if (mess.includes(\"122.48.29.217\")){\n        msg.topic = \"my_devices/esp_nfc/led\";\n        msg.payload = \"1\";\n        return msg;\n    }\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 1420,
        "wires": [
            [
                "3eadd95b90ef02be",
                "083f7875d0ef6546"
            ]
        ]
    },
    {
        "id": "3eadd95b90ef02be",
        "type": "link out",
        "z": "10c2ed820032ad21",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "70a396011a96ea0a"
        ],
        "x": 1045,
        "y": 1380,
        "wires": []
    },
    {
        "id": "083f7875d0ef6546",
        "type": "mqtt out",
        "z": "10c2ed820032ad21",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 1090,
        "y": 1460,
        "wires": []
    },
    {
        "id": "a4b2086ae847c575",
        "type": "inject",
        "z": "80b3c9f9fd782f07",
        "name": "Apri Porta",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_nfc/led",
        "payload": "1",
        "payloadType": "str",
        "x": 660,
        "y": 100,
        "wires": [
            [
                "610dc1834dcbe680",
                "52ded372d43116d3"
            ]
        ]
    },
    {
        "id": "dfd8866029acc2e4",
        "type": "ui_button",
        "z": "80b3c9f9fd782f07",
        "name": "Apri porta ",
        "group": "86f322ebf8049f50",
        "order": 3,
        "width": "4",
        "height": "1",
        "passthru": false,
        "label": "Apri porta ",
        "tooltip": "",
        "color": "black",
        "bgcolor": "lightgreen",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "my_devices/esp_nfc/led",
        "topicType": "str",
        "x": 660,
        "y": 40,
        "wires": [
            [
                "610dc1834dcbe680",
                "52ded372d43116d3"
            ]
        ]
    },
    {
        "id": "e180db4ef9a91f77",
        "type": "debug",
        "z": "80b3c9f9fd782f07",
        "name": "Campanello suonato",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 320,
        "wires": []
    },
    {
        "id": "d7d66e7794189176",
        "type": "function",
        "z": "80b3c9f9fd782f07",
        "name": "\"Campanello suonato!\" else null",
        "func": "if (msg.payload==\"1\")\n    msg.payload = \" \";\n    else \n        return null;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 320,
        "wires": [
            [
                "e180db4ef9a91f77",
                "c08de63d3736a919",
                "6e14ee9ec23c6dcf",
                "38fe967dfb67679d"
            ]
        ]
    },
    {
        "id": "7b32a993328d3fd5",
        "type": "ui_audio",
        "z": "80b3c9f9fd782f07",
        "name": "Campanello ",
        "group": "86f322ebf8049f50",
        "voice": "Microsoft Cosimo - Italian (Italy)",
        "always": false,
        "x": 1110,
        "y": 460,
        "wires": []
    },
    {
        "id": "c08de63d3736a919",
        "type": "ui_toast",
        "z": "80b3c9f9fd782f07",
        "position": "top right",
        "displayTime": "3",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": " Campanello suonato!",
        "name": "a",
        "x": 770,
        "y": 260,
        "wires": [],
        "info": "<p> ciao </p>"
    },
    {
        "id": "38fe967dfb67679d",
        "type": "function",
        "z": "80b3c9f9fd782f07",
        "name": "Din Dong",
        "func": "msg.payload = \"din dong\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 440,
        "wires": [
            [
                "7b32a993328d3fd5"
            ]
        ]
    },
    {
        "id": "c2f5e739803a5a67",
        "type": "debug",
        "z": "80b3c9f9fd782f07",
        "name": "Foto arrivata",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1060,
        "wires": []
    },
    {
        "id": "610dc1834dcbe680",
        "type": "link out",
        "z": "80b3c9f9fd782f07",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "4ed927689e34b269",
            "a4d27caacb5544ab",
            "70a396011a96ea0a"
        ],
        "x": 875,
        "y": 40,
        "wires": []
    },
    {
        "id": "1f4a4471643a8872",
        "type": "link in",
        "z": "80b3c9f9fd782f07",
        "name": "Campanello suonato",
        "links": [
            "61b1061c4dd0e714",
            "9c638ad8aa6b7d20",
            "4cb59f6b1499e8a9"
        ],
        "x": 245,
        "y": 320,
        "wires": [
            [
                "d7d66e7794189176"
            ]
        ]
    },
    {
        "id": "4a257bc61604bfa5",
        "type": "link in",
        "z": "80b3c9f9fd782f07",
        "name": "immagine",
        "links": [
            "fec084381cfe638b",
            "1cce8fa5ab96b93d",
            "bc6e52ddc2902daf",
            "8a84b984d0063a27"
        ],
        "x": 475,
        "y": 1040,
        "wires": [
            [
                "1cd675833f0cf4ab",
                "ea7b18c0b4a5b559"
            ]
        ]
    },
    {
        "id": "df259257b7864b28",
        "type": "ui_text",
        "z": "80b3c9f9fd782f07",
        "group": "86f322ebf8049f50",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Foto arrivata: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 1160,
        "wires": []
    },
    {
        "id": "ea7b18c0b4a5b559",
        "type": "ui_template",
        "z": "80b3c9f9fd782f07",
        "group": "86f322ebf8049f50",
        "name": "Mostra foto",
        "order": 2,
        "width": "6",
        "height": "6",
        "format": "<canvas id=\"canvas\" style=\"border:solid;\"> </canvas>\n<!-- <div id=\"messages\"></div> -->\n<script>\n    var first = 0;  // Usato per inizializzare il canvas\n\n    var xres = 80; // Larghezza foto\n    var yres = 60; // Altezza foto\n    var ctx; // Serve per la \"stampa\" della foto\n    var imgData; // Serve per la stampa della foto\n    var gcanvasid = \"canvas\"; // id del canvas che conterra' la foto\n\n    function hexStringToUint8Array(hexString) {\n        // Remove any non-hex characters (like spaces or newline characters)\n        hexString = String(hexString);\n        hexString = hexString.replace(/[^0-9a-fA-F]/g, '');\n\n        // Split the string into pairs of two\n        const pairs = hexString.match(/.{1,2}/g);\n\n        // Convert each pair to a byte value\n        const byteArray = pairs.map((pair) => parseInt(pair, 16));\n\n        // Create a Uint8Array from the byte values\n        return new Uint8Array(byteArray);\n    }\n\n    function init_canvas() {\n\n        canvas = document.getElementById(\"canvas\");\n        canvas.width = xres;\n        canvas.height = yres;\n\n        ctx = canvas.getContext(\"2d\");\n        imgData = ctx.createImageData(canvas.width, canvas.height);\n\n        for (var i = 0; i < imgData.data.length; i +=4) {\n            imgData.data[i + 0] = 0xCC;\n            imgData.data[i + 1] = 0xCC;\n            imgData.data[i + 2] = 0xCC;\n            imgData.data[i + 3] = 255;\n        }\n        ctx.putImageData(imgData, canvas.width, canvas.height);\n        ctx.globalAlpha = 0.5;\n\n    }\n\n\n    // Funzione che \"stampa\" l'immagine nel canvas\n    function display(pixels) {\n        //alert('display'); \n        ln = 0;\n        var i = 0;\n        for (y = 0; y < yres; y++) {\n            for (x = 0; x < xres; x++) {\n                i = (y * xres + x) << 1;\n                pixel16 = (0xffff & pixels[i]) | ((0xffff & pixels[i + 1]) << 8);\n                imgData.data[ln + 0] = ((((pixel16 >> 11) & 0x1F) * 527) + 23) >> 6;\n                imgData.data[ln + 1] = ((((pixel16 >> 5) & 0x3F) * 259) + 33) >> 6;\n                imgData.data[ln + 2] = (((pixel16 & 0x1F) * 527) + 23) >> 6;\n                imgData.data[ln + 3] = (0xFFFFFFFF) & 255;\n                ln += 4;\n            }\n        }\n        \n        ctx.putImageData(imgData, 0, 0);\n    }\n\n    /*function mess_arrived(msg) {\n        // NEW MESSAGE ARRIVED IN \"INPUT\": msg\n        if (first === 0) {\n            console.log(\"first\");\n            init_canvas();\n            first = 1;\n        }\n        \n        // Check if the message is in the chunked format \"[topic] i message\"\n        var chunkFormatMatches = msg.match(/\\[(\\d+)\\]\\s(.*)/);\n        \n        if (chunkFormatMatches && chunkFormatMatches.length === 3) {\n            // Chunked format: \"[topic] i message\"\n            var chunkIndex = parseInt(chunkFormatMatches[1]);\n            var chunkData = hexStringToUint8Array(chunkFormatMatches[2]);\n            \n            receivedChunks[chunkIndex] = chunkData;\n            \n            if (chunkIndex === expectedChunks) {\n                // Display the image when all expected chunks are received\n                var completeImage = new Uint8Array(expectedChunks * chunkData.length);\n                \n                for (var i = 0; i < expectedChunks; i++) { \n                    var chunk=receivedChunks[i]; completeImage.set(chunk, i * chunk.length); \n                }\n                display(completeImage); \n                \n                // Clear receivedChunks for the next image \n                receivedChunks={}; \n                \n                // Increment expectedChunks for the next image \n                expectedChunks=0; \n            }\n        } else { \n            // Non-chunked format: Just bytes to be converted to Uint8Array \n            var rawData=hexStringToUint8Array(msg); \n            display(rawData); \n        } \n    }*/\n\n\n    (function(scope) {\n        scope.$watch('msg.payload', function(msg) { // $watch fires each time the node is triggered in the flow\n        // mess_arrived(msg);\n        // return ;\n        // NUOVO MESSAGGIO ARRIVATO IN \"INPUT\": msg\n        if (first == 0) {\n            console.log(\"first\");\n            init_canvas() ;\n            first = 1;        \n        }\n        \n        pixel = hexStringToUint8Array(msg);\n        display(pixel);\n            \n    });\n\n\n\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 650,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "1cd675833f0cf4ab",
        "type": "function",
        "z": "80b3c9f9fd782f07",
        "name": "function 2",
        "func": "function getCharacterLength(str) {\n  // The string iterator that is used here iterates over characters,\n  // not mere code units\n  return [...str].length;\n}\n\n// msg.payload = \"Dim: \" + getCharacterLength(msg.payload);\n// var timestamp = M\n\nmsg.payload = \"Dim: \" + getCharacterLength(msg.payload) + \" Foto: \" + Math.floor(Date.now() / 1000);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1080,
        "wires": [
            [
                "df259257b7864b28",
                "c2f5e739803a5a67"
            ]
        ]
    },
    {
        "id": "65c33ee231e8e37a",
        "type": "inject",
        "z": "80b3c9f9fd782f07",
        "name": "Reset valore label",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 650,
        "y": 1240,
        "wires": [
            [
                "df259257b7864b28"
            ]
        ]
    },
    {
        "id": "91234e7fc5788b79",
        "type": "ui_button",
        "z": "80b3c9f9fd782f07",
        "name": "",
        "group": "86f322ebf8049f50",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Mostra camera",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "my_devices/esp_cam/request_send_img",
        "topicType": "str",
        "x": 280,
        "y": 600,
        "wires": [
            [
                "32dfe625d8c39119",
                "c1d82156183774bc"
            ]
        ]
    },
    {
        "id": "32dfe625d8c39119",
        "type": "link out",
        "z": "80b3c9f9fd782f07",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "4ed927689e34b269",
            "a4d27caacb5544ab",
            "70a396011a96ea0a"
        ],
        "x": 485,
        "y": 620,
        "wires": []
    },
    {
        "id": "e6457b64cf4bf7af",
        "type": "inject",
        "z": "80b3c9f9fd782f07",
        "name": "Mostra camera",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 640,
        "wires": [
            [
                "32dfe625d8c39119",
                "c1d82156183774bc"
            ]
        ]
    },
    {
        "id": "63135e38fa368d67",
        "type": "ui_switch",
        "z": "80b3c9f9fd782f07",
        "name": "",
        "label": "Mostra video in streaming",
        "tooltip": "",
        "group": "86f322ebf8049f50",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "a",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 420,
        "y": 740,
        "wires": [
            [
                "d0eff0b0cf30301f"
            ]
        ]
    },
    {
        "id": "d0eff0b0cf30301f",
        "type": "function",
        "z": "80b3c9f9fd782f07",
        "name": "Video in streaming o foto ",
        "func": "// Se slider on -> richiedo invio foto ogni 500 milllisec\nif (msg.payload == true)    \n    //msg.payload = 500;    \n    msg.payload= \"{ 'freq_send_img': 500, 'timeout_send_img': 30}\";\nelse \n    //msg.payload = -1;    \n    msg.payload= \"{ 'freq_send_img': -1}\";\nmsg.topic = \"my_devices/esp_cam/config\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 740,
        "wires": [
            [
                "fbf141a22640ee0b",
                "ea15dc202c95434d"
            ]
        ]
    },
    {
        "id": "fbf141a22640ee0b",
        "type": "link out",
        "z": "80b3c9f9fd782f07",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "4ed927689e34b269",
            "a4d27caacb5544ab",
            "70a396011a96ea0a"
        ],
        "x": 885,
        "y": 740,
        "wires": []
    },
    {
        "id": "99bf7a75656598f3",
        "type": "ui_button",
        "z": "80b3c9f9fd782f07",
        "name": "",
        "group": "86f322ebf8049f50",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Stop camera",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "str",
        "topic": "my_devices/esp_cam/request_send_img",
        "topicType": "str",
        "x": 270,
        "y": 540,
        "wires": [
            [
                "32dfe625d8c39119",
                "c1d82156183774bc"
            ]
        ]
    },
    {
        "id": "641b3cae85c21151",
        "type": "mqtt in",
        "z": "80b3c9f9fd782f07",
        "name": "",
        "topic": "my_devices/esp_cam/image",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 370,
        "y": 1000,
        "wires": [
            [
                "ea7b18c0b4a5b559",
                "1cd675833f0cf4ab"
            ]
        ]
    },
    {
        "id": "52ded372d43116d3",
        "type": "mqtt out",
        "z": "80b3c9f9fd782f07",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 890,
        "y": 120,
        "wires": []
    },
    {
        "id": "9507b20c43420c22",
        "type": "mqtt in",
        "z": "80b3c9f9fd782f07",
        "name": "",
        "topic": "my_devices/esp_nfc/button",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "d7d66e7794189176",
                "3b0680717c24a4bf"
            ]
        ]
    },
    {
        "id": "c1d82156183774bc",
        "type": "mqtt out",
        "z": "80b3c9f9fd782f07",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 530,
        "y": 580,
        "wires": []
    },
    {
        "id": "ea15dc202c95434d",
        "type": "mqtt out",
        "z": "80b3c9f9fd782f07",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 890,
        "y": 700,
        "wires": []
    },
    {
        "id": "3b0680717c24a4bf",
        "type": "link out",
        "z": "80b3c9f9fd782f07",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "a4d27caacb5544ab",
            "70a396011a96ea0a"
        ],
        "x": 345,
        "y": 240,
        "wires": []
    },
    {
        "id": "6e14ee9ec23c6dcf",
        "type": "function",
        "z": "80b3c9f9fd782f07",
        "d": true,
        "name": "Modalita' NON disturbare",
        "func": "function isSundayMorning() {\n    // Get the current date and time\n    const currentDate = new Date();\n\n    // Check if it's Sunday (0 corresponds to Sunday, 1 to Monday, and so on)\n    const isSunday = currentDate.getDay() === 1;\n\n    // Check if it's between 6 and 9 in the morning\n    const isMorning =\n        currentDate.getHours() >= 6 && currentDate.getHours() < 12;\n\n    // Return true if it's Sunday and in the specified time range, otherwise false\n    return isSunday && isMorning;\n}\n\n\nif (isSundayMorning())\n    return null;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 440,
        "wires": [
            [
                "38fe967dfb67679d"
            ]
        ]
    },
    {
        "id": "f039d1add47dc0c7",
        "type": "debug",
        "z": "d8690a93abfc5ac5",
        "name": "Errore",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 360,
        "wires": []
    },
    {
        "id": "caf4fb97d8285eb2",
        "type": "function",
        "z": "d8690a93abfc5ac5",
        "name": "\"---ERRORE---\" + errore",
        "func": "msg.payload = \"---ERRORE---\\n\" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 360,
        "wires": [
            [
                "f039d1add47dc0c7",
                "c7e0d27795b1d308"
            ]
        ]
    },
    {
        "id": "c7e0d27795b1d308",
        "type": "ui_toast",
        "z": "d8690a93abfc5ac5",
        "d": true,
        "position": "top right",
        "displayTime": "5",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Errore",
        "name": "Notifica Errore rilevato",
        "x": 980,
        "y": 300,
        "wires": []
    },
    {
        "id": "6b161f6e77a5aaf7",
        "type": "inject",
        "z": "d8690a93abfc5ac5",
        "name": "Blocca lettore NFC",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_nfc/nfc_reader_state",
        "payload": "0",
        "payloadType": "str",
        "x": 810,
        "y": 100,
        "wires": [
            [
                "c21372e7f6a8306d",
                "b1e98e883931dc35"
            ]
        ]
    },
    {
        "id": "c21372e7f6a8306d",
        "type": "link out",
        "z": "d8690a93abfc5ac5",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "a4d27caacb5544ab",
            "70a396011a96ea0a"
        ],
        "x": 1015,
        "y": 100,
        "wires": []
    },
    {
        "id": "640fb249a2ac9f43",
        "type": "link in",
        "z": "d8690a93abfc5ac5",
        "name": "Errori",
        "links": [
            "1cb179e3ea8dfcbd",
            "fbc653414df87932",
            "e86972b1496c3d2d"
        ],
        "x": 505,
        "y": 360,
        "wires": [
            [
                "caf4fb97d8285eb2"
            ]
        ]
    },
    {
        "id": "5e55b6816884dfb9",
        "type": "inject",
        "z": "d8690a93abfc5ac5",
        "name": "Reset Esp camera",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_cam/reset",
        "payload": "1",
        "payloadType": "str",
        "x": 710,
        "y": 820,
        "wires": [
            [
                "d3ad3650759fe657",
                "f01f2e47dca73020"
            ]
        ]
    },
    {
        "id": "d3ad3650759fe657",
        "type": "link out",
        "z": "d8690a93abfc5ac5",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "e87b3b74df0bf879",
            "a4d27caacb5544ab",
            "70a396011a96ea0a"
        ],
        "x": 915,
        "y": 820,
        "wires": []
    },
    {
        "id": "34932c8565071295",
        "type": "inject",
        "z": "d8690a93abfc5ac5",
        "name": "Timeout 20 sec video in streaming",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_cam/config/timeout_send_img",
        "payload": "20",
        "payloadType": "str",
        "x": 520,
        "y": 580,
        "wires": [
            [
                "cba014845e20c3cb",
                "e099085cf932bb5d"
            ]
        ]
    },
    {
        "id": "58f10500d583bfd1",
        "type": "inject",
        "z": "d8690a93abfc5ac5",
        "name": "NO Timeout video in streaming",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/esp_cam/config/timeout_send_img",
        "payload": "-1",
        "payloadType": "str",
        "x": 530,
        "y": 520,
        "wires": [
            [
                "cba014845e20c3cb",
                "e099085cf932bb5d"
            ]
        ]
    },
    {
        "id": "aeb9af4cc2ba97b1",
        "type": "comment",
        "z": "d8690a93abfc5ac5",
        "name": "CONFIGURAZIONI",
        "info": "",
        "x": 190,
        "y": 140,
        "wires": []
    },
    {
        "id": "a0e4c5d001b5e49d",
        "type": "inject",
        "z": "d8690a93abfc5ac5",
        "name": "Cambia broker (pc)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/global_config/change_broker",
        "payload": "192.168.43.252",
        "payloadType": "str",
        "x": 280.15875244140625,
        "y": 1081.58740234375,
        "wires": [
            [
                "03f5049ad4774689",
                "60d3501558ab71bf"
            ]
        ]
    },
    {
        "id": "9a31535685353c53",
        "type": "inject",
        "z": "d8690a93abfc5ac5",
        "name": "Cambia broker (broker.mqtt.cool)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "my_devices/global_config/change_broker",
        "payload": "broker.mqtt.cool",
        "payloadType": "str",
        "x": 270,
        "y": 1120,
        "wires": [
            [
                "03f5049ad4774689",
                "60d3501558ab71bf"
            ]
        ]
    },
    {
        "id": "03f5049ad4774689",
        "type": "link out",
        "z": "d8690a93abfc5ac5",
        "name": "Manda messaggio retain",
        "mode": "link",
        "links": [
            "22c643a21305c065",
            "a4d27caacb5544ab",
            "70a396011a96ea0a"
        ],
        "x": 505,
        "y": 1140,
        "wires": []
    },
    {
        "id": "cba014845e20c3cb",
        "type": "link out",
        "z": "d8690a93abfc5ac5",
        "name": "Manda messaggio",
        "mode": "link",
        "links": [
            "22c643a21305c065",
            "a4d27caacb5544ab",
            "70a396011a96ea0a"
        ],
        "x": 745,
        "y": 560,
        "wires": []
    },
    {
        "id": "b1e98e883931dc35",
        "type": "mqtt out",
        "z": "d8690a93abfc5ac5",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 1030,
        "y": 140,
        "wires": []
    },
    {
        "id": "af4f477f7a3cb18c",
        "type": "mqtt in",
        "z": "d8690a93abfc5ac5",
        "name": "",
        "topic": "my_devices/esp_nfc/errors",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "caf4fb97d8285eb2"
            ]
        ]
    },
    {
        "id": "e099085cf932bb5d",
        "type": "mqtt out",
        "z": "d8690a93abfc5ac5",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 790,
        "y": 520,
        "wires": []
    },
    {
        "id": "f01f2e47dca73020",
        "type": "mqtt out",
        "z": "d8690a93abfc5ac5",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 930,
        "y": 860,
        "wires": []
    },
    {
        "id": "60d3501558ab71bf",
        "type": "mqtt out",
        "z": "d8690a93abfc5ac5",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 530,
        "y": 1080,
        "wires": []
    }
]