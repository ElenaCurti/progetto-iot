[
    {
        "id": "c9902645a313fd3e",
        "type": "tab",
        "label": "NFC",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b8dd50473bede0a2",
        "type": "tab",
        "label": "Campanello ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2f214a063e566a3d",
        "type": "tab",
        "label": "Amministratore",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3c590ebc25e0b5cc",
        "type": "mqtt-broker",
        "name": "WifiCasa-PC",
        "broker": "192.168.1.23",
        "port": "1883",
        "clientid": "elenaId-nodered",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "3de8dc68ea06568e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqtt.cool",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "adc21c5cb326c3bb",
        "type": "ui_tab",
        "name": "Foto",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1882cf541cd0b971",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "6778e3a8648143cc",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7c00691034cd17f7",
        "type": "coap-server",
        "name": "192.168.43.252",
        "port": "5683",
        "ipv6": false
    },
    {
        "id": "ff9707e7a473acf5",
        "type": "ui_group",
        "name": "Campanello",
        "tab": "6778e3a8648143cc",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c1cb528d9a013a45",
        "type": "ui_group",
        "name": "Lettore NFC",
        "tab": "6778e3a8648143cc",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "44d409132046bdee",
        "type": "mqtt out",
        "z": "c9902645a313fd3e",
        "name": "Sblocca NFC Reader",
        "topic": "door/esp_nfc/nfc_reader_state",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 1240,
        "y": 220,
        "wires": []
    },
    {
        "id": "9eb123c62a9aa395",
        "type": "mqtt in",
        "z": "c9902645a313fd3e",
        "name": "Intruso",
        "topic": "door/esp_nfc/intruder",
        "qos": "0",
        "datatype": "utf8",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 360,
        "wires": [
            [
                "bb443d353e3cfd4a",
                "000f810fac1aafd3"
            ]
        ]
    },
    {
        "id": "09bad171139ef01d",
        "type": "debug",
        "z": "c9902645a313fd3e",
        "name": "Intruso",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 440,
        "wires": []
    },
    {
        "id": "bb443d353e3cfd4a",
        "type": "function",
        "z": "c9902645a313fd3e",
        "name": "\"Intruso:\" + tag",
        "func": "msg.payload = \"Intruso rilevato: \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 440,
        "wires": [
            [
                "09bad171139ef01d"
            ]
        ]
    },
    {
        "id": "e29734157c1dca93",
        "type": "mqtt in",
        "z": "c9902645a313fd3e",
        "name": "Tag strisciato",
        "topic": "door/esp_nfc/tag_swiped",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 80,
        "wires": [
            [
                "5a4dd3d6a0af953d",
                "21fcce77a2ea6e02"
            ]
        ]
    },
    {
        "id": "5a4dd3d6a0af953d",
        "type": "function",
        "z": "c9902645a313fd3e",
        "name": "\"Tag letto: \" + tag",
        "func": "msg.payload = \"Tag letto: \" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 80,
        "wires": [
            [
                "611b98f56a1c2e2b"
            ]
        ]
    },
    {
        "id": "611b98f56a1c2e2b",
        "type": "debug",
        "z": "c9902645a313fd3e",
        "name": "Tag letto",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 80,
        "wires": []
    },
    {
        "id": "21fcce77a2ea6e02",
        "type": "ui_toast",
        "z": "c9902645a313fd3e",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Tag strisciato: ",
        "name": "Notifica tag strisciato",
        "x": 460,
        "y": 140,
        "wires": []
    },
    {
        "id": "2c41b9f86bc1b8eb",
        "type": "ui_button",
        "z": "c9902645a313fd3e",
        "name": "Sblocca lettore NFC",
        "group": "c1cb528d9a013a45",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Sblocca lettore NFC",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 980,
        "y": 280,
        "wires": [
            [
                "44d409132046bdee",
                "1ab84cded015e22a"
            ]
        ]
    },
    {
        "id": "000f810fac1aafd3",
        "type": "ui_toast",
        "z": "c9902645a313fd3e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Intruso rilevato: ",
        "name": "Intruso rilevato",
        "x": 440,
        "y": 360,
        "wires": [
            [
                "f6dba6cd6b73bf5d"
            ]
        ]
    },
    {
        "id": "15e171b6de1b1ce7",
        "type": "ui_text",
        "z": "c9902645a313fd3e",
        "group": "c1cb528d9a013a45",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Stato lettore NFC:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 970,
        "y": 460,
        "wires": []
    },
    {
        "id": "f6dba6cd6b73bf5d",
        "type": "function",
        "z": "c9902645a313fd3e",
        "name": "Stato reader: bloccato",
        "func": "msg.payload = \"Bloccato\";\nmsg.enabled = true;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 360,
        "wires": [
            [
                "15e171b6de1b1ce7",
                "2c41b9f86bc1b8eb"
            ]
        ]
    },
    {
        "id": "1ab84cded015e22a",
        "type": "function",
        "z": "c9902645a313fd3e",
        "name": "Stato reader: Abilitato",
        "func": "msg.payload = \"Abilitato\";\nmsg.enabled = false;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 360,
        "wires": [
            [
                "15e171b6de1b1ce7",
                "2c41b9f86bc1b8eb",
                "cc677b8b3fbcac63"
            ]
        ]
    },
    {
        "id": "cc677b8b3fbcac63",
        "type": "debug",
        "z": "c9902645a313fd3e",
        "name": "Sbloco la lettura NFC",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1560,
        "y": 360,
        "wires": []
    },
    {
        "id": "a43683d67d18f4b3",
        "type": "inject",
        "z": "b8dd50473bede0a2",
        "name": "Apri Porta",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 540,
        "y": 200,
        "wires": [
            [
                "b5d22d8caff239ae"
            ]
        ]
    },
    {
        "id": "b5d22d8caff239ae",
        "type": "mqtt out",
        "z": "b8dd50473bede0a2",
        "name": "Apri Porta",
        "topic": "door/esp_nfc/led",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "aa81bf8c7923578a",
        "type": "ui_button",
        "z": "b8dd50473bede0a2",
        "name": "Apri porta ",
        "group": "ff9707e7a473acf5",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Apri porta ",
        "tooltip": "",
        "color": "black",
        "bgcolor": "lightgreen",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "b5d22d8caff239ae"
            ]
        ]
    },
    {
        "id": "a27db25eac954e51",
        "type": "mqtt in",
        "z": "b8dd50473bede0a2",
        "name": "Campanello Suonato",
        "topic": "door/esp_nfc/button",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 380,
        "wires": [
            [
                "67568f2ec1a4686b"
            ]
        ]
    },
    {
        "id": "657a6d6f946de40d",
        "type": "debug",
        "z": "b8dd50473bede0a2",
        "name": "Campanello suonato",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 380,
        "wires": []
    },
    {
        "id": "67568f2ec1a4686b",
        "type": "function",
        "z": "b8dd50473bede0a2",
        "name": "\"Campanello suonato!\" else null",
        "func": "if (msg.payload==\"1\")\n    msg.payload = \"Campanello suonato\";\n    else \n        return null;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 380,
        "wires": [
            [
                "657a6d6f946de40d",
                "06d739adee7d9fce",
                "66bd28da63cc9cd1"
            ]
        ]
    },
    {
        "id": "ccb8ce6019d3df59",
        "type": "ui_audio",
        "z": "b8dd50473bede0a2",
        "name": "Campanello ",
        "group": "ff9707e7a473acf5",
        "voice": "Microsoft Cosimo - Italian (Italy)",
        "always": false,
        "x": 1030,
        "y": 460,
        "wires": []
    },
    {
        "id": "06d739adee7d9fce",
        "type": "ui_toast",
        "z": "b8dd50473bede0a2",
        "position": "top right",
        "displayTime": "3",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": " Campanello suonato!",
        "name": "Campanello suonato!",
        "x": 920,
        "y": 320,
        "wires": [],
        "info": "<p> ciao </p>"
    },
    {
        "id": "66bd28da63cc9cd1",
        "type": "function",
        "z": "b8dd50473bede0a2",
        "name": "Din Don",
        "func": "msg.payload = \"din don\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 460,
        "wires": [
            [
                "ccb8ce6019d3df59"
            ]
        ]
    },
    {
        "id": "26cc02b997463435",
        "type": "mqtt in",
        "z": "b8dd50473bede0a2",
        "name": "Immagine",
        "topic": "immagine",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 440,
        "y": 620,
        "wires": [
            [
                "a331d7a7d41429d1",
                "62bf2acc09869a10"
            ]
        ]
    },
    {
        "id": "a331d7a7d41429d1",
        "type": "ui_template",
        "z": "b8dd50473bede0a2",
        "group": "ff9707e7a473acf5",
        "name": "Mostra foto",
        "order": 0,
        "width": "6",
        "height": "6",
        "format": "<canvas id=\"canvas\" style=\"border:solid;\"> </canvas>\n<div id=\"messages\"></div>\n\n<script>\n    var first = 0;  // Usato per inizializzare il canvas\n\n    var xres = 80; // Larghezza foto\n    var yres = 60; // Altezza foto\n    var ctx; // Serve per la \"stampa\" della foto\n    var imgData; // Serve per la stampa della foto\n    var gcanvasid = \"canvas\"; // id del canvas che conterra' la foto\n\n    function hexStringToUint8Array(hexString) {\n        // Remove any non-hex characters (like spaces or newline characters)\n        hexString = String(hexString);\n        hexString = hexString.replace(/[^0-9a-fA-F]/g, '');\n\n        // Split the string into pairs of two\n        const pairs = hexString.match(/.{1,2}/g);\n\n        // Convert each pair to a byte value\n        const byteArray = pairs.map((pair) => parseInt(pair, 16));\n\n        // Create a Uint8Array from the byte values\n        return new Uint8Array(byteArray);\n    }\n\n    function init_canvas() {\n\n        canvas = document.getElementById(\"canvas\");\n        canvas.width = xres;\n        canvas.height = yres;\n\n        ctx = canvas.getContext(\"2d\");\n        imgData = ctx.createImageData(canvas.width, canvas.height);\n\n        for (var i = 0; i < imgData.data.length; i +=4) {\n            imgData.data[i + 0] = 0xCC;\n            imgData.data[i + 1] = 0xCC;\n            imgData.data[i + 2] = 0xCC;\n            imgData.data[i + 3] = 255;\n        }\n        ctx.putImageData(imgData, canvas.width, canvas.height);\n        ctx.globalAlpha = 0.5;\n\n    }\n\n\n    // Funzione che \"stampa\" l'immagine nel canvas\n    function display(pixels) {\n        //alert('display'); \n        ln = 0;\n        var i = 0;\n        for (y = 0; y < yres; y++) {\n            for (x = 0; x < xres; x++) {\n                i = (y * xres + x) << 1;\n                pixel16 = (0xffff & pixels[i]) | ((0xffff & pixels[i + 1]) << 8);\n                imgData.data[ln + 0] = ((((pixel16 >> 11) & 0x1F) * 527) + 23) >> 6;\n                imgData.data[ln + 1] = ((((pixel16 >> 5) & 0x3F) * 259) + 33) >> 6;\n                imgData.data[ln + 2] = (((pixel16 & 0x1F) * 527) + 23) >> 6;\n                imgData.data[ln + 3] = (0xFFFFFFFF) & 255;\n                ln += 4;\n            }\n        }\n        \n        ctx.putImageData(imgData, 0, 0);\n    }\n\n\n    (function(scope) {\n        scope.$watch('msg.payload', function(msg) { // $watch fires each time the node is triggered in the flow\n        \n        // NUOVO MESSAGGIO ARRIVATO IN \"INPUT\": msg\n        if (first == 0) {\n            console.log(\"first\");\n            init_canvas() ;\n            first = 1;        \n        }\n        \n        pixel = hexStringToUint8Array(msg);\n        display(pixel);\n            \n    });\n\n\n\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 670,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "95e8fc6b9984a55a",
        "type": "debug",
        "z": "b8dd50473bede0a2",
        "d": true,
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 700,
        "wires": []
    },
    {
        "id": "62bf2acc09869a10",
        "type": "function",
        "z": "b8dd50473bede0a2",
        "name": "function 1",
        "func": "msg.payload = \"foto\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 700,
        "wires": [
            [
                "95e8fc6b9984a55a"
            ]
        ]
    },
    {
        "id": "5a472adc43c03f77",
        "type": "inject",
        "z": "2f214a063e566a3d",
        "name": "configurazione_esempio",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{     \"tag_autorizzati\": [         \"122.48.29.217\",  \"209.53.34.217\"     ],     \"num_tentativi_errati\": [3, 5],      \"check_tag_localmente\": true,     \"deep_sleep\": false }",
        "payloadType": "json",
        "x": 450,
        "y": 140,
        "wires": [
            [
                "ac02d3e4d87a9ca3"
            ]
        ]
    },
    {
        "id": "7d7a1cfd0c3c6117",
        "type": "inject",
        "z": "2f214a063e566a3d",
        "name": "blocca_tag_bianco",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{     \"tag_autorizzati\": [           \"209.53.34.217\"     ]}",
        "payloadType": "json",
        "x": 450,
        "y": 180,
        "wires": [
            [
                "ac02d3e4d87a9ca3"
            ]
        ]
    },
    {
        "id": "ac02d3e4d87a9ca3",
        "type": "mqtt out",
        "z": "2f214a063e566a3d",
        "name": "door/esp_nfc/config",
        "topic": "door/esp_nfc/config",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 730,
        "y": 180,
        "wires": []
    },
    {
        "id": "6615c31d852e0fec",
        "type": "inject",
        "z": "2f214a063e566a3d",
        "name": "configurazione errata",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "aa",
        "payloadType": "str",
        "x": 460,
        "y": 220,
        "wires": [
            [
                "ac02d3e4d87a9ca3"
            ]
        ]
    },
    {
        "id": "f89ba782100e6798",
        "type": "ui_button",
        "z": "2f214a063e566a3d",
        "d": true,
        "name": "",
        "group": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Manda configurazione default",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "{     \"tag_autorizzati\": [         \"122.48.29.217\",  \"209.53.34.217\"     ],     \"num_tentativi_errati\": [3, 5],      \"check_tag_localmente\": true,     \"deep_sleep\": false }",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 450,
        "y": 100,
        "wires": [
            [
                "ac02d3e4d87a9ca3"
            ]
        ]
    },
    {
        "id": "8e591aea596516f4",
        "type": "mqtt in",
        "z": "2f214a063e566a3d",
        "name": "Errori",
        "topic": "door/esp_nfc/errors",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "3c590ebc25e0b5cc",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 600,
        "wires": [
            [
                "24ad4ff4e16bf8ce"
            ]
        ]
    },
    {
        "id": "7a5a2f3255b923dc",
        "type": "debug",
        "z": "2f214a063e566a3d",
        "name": "Errore",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 600,
        "wires": []
    },
    {
        "id": "24ad4ff4e16bf8ce",
        "type": "function",
        "z": "2f214a063e566a3d",
        "name": "\"---ERRORE---\" + errore",
        "func": "msg.payload = \"---ERRORE---\\n\" + msg.payload;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 600,
        "wires": [
            [
                "7a5a2f3255b923dc",
                "020b33c803e6230d"
            ]
        ]
    },
    {
        "id": "020b33c803e6230d",
        "type": "ui_toast",
        "z": "2f214a063e566a3d",
        "position": "top right",
        "displayTime": "5",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Errore",
        "name": "Notifica Errore rilevato",
        "x": 820,
        "y": 540,
        "wires": []
    },
    {
        "id": "d87c42d9c98e133a",
        "type": "mqtt out",
        "z": "2f214a063e566a3d",
        "name": "Blocca NFC Reader",
        "topic": "door/esp_nfc/nfc_reader_state",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3c590ebc25e0b5cc",
        "x": 700,
        "y": 360,
        "wires": []
    },
    {
        "id": "59d5c825bd0572d7",
        "type": "inject",
        "z": "2f214a063e566a3d",
        "name": "Blocca lettore NFC",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "str",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "d87c42d9c98e133a"
            ]
        ]
    }
]